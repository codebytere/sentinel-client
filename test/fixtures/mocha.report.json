{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 98,
  "numPassedTests": 619,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 98,
  "numTotalTests": 619,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 63,
    "total": 63,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1595019679115,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "fetch-types",
            "fetchTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types fetchTypeDefinitions() fetches type definitions",
          "location": null,
          "status": "passed",
          "title": "fetches type definitions"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "fetchTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types fetchTypeDefinitions() handles errors by returning an empty string",
          "location": null,
          "status": "passed",
          "title": "handles errors by returning an empty string"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getOfflineTypeDefinitionPath()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getOfflineTypeDefinitionPath() returns a path",
          "location": null,
          "status": "passed",
          "title": "returns a path"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getOfflineTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getOfflineTypeDefinitions() returns true if they exist",
          "location": null,
          "status": "passed",
          "title": "returns true if they exist"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getOfflineTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getOfflineTypeDefinitions() returns false if they exist",
          "location": null,
          "status": "passed",
          "title": "returns false if they exist"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getDownloadedVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getDownloadedVersionTypeDefs() returns type definitions (and goes online if they do not exist)",
          "location": null,
          "status": "passed",
          "title": "returns type definitions (and goes online if they do not exist)"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getDownloadedVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getDownloadedVersionTypeDefs() returns null if going online failed",
          "location": null,
          "status": "passed",
          "title": "returns null if going online failed"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getDownloadedVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getDownloadedVersionTypeDefs() tries to save them to disk if downloaded",
          "location": null,
          "status": "passed",
          "title": "tries to save them to disk if downloaded"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getDownloadedVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getDownloadedVersionTypeDefs() returns them even if saving them failed",
          "location": null,
          "status": "passed",
          "title": "returns them even if saving them failed"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getDownloadedVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getDownloadedVersionTypeDefs() tries to read them from disk if downloaded",
          "location": null,
          "status": "passed",
          "title": "tries to read them from disk if downloaded"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getDownloadedVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getDownloadedVersionTypeDefs() returns null if downloaded but not readable",
          "location": null,
          "status": "passed",
          "title": "returns null if downloaded but not readable"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getLocalVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getLocalVersionTypeDefs() fetches a local path if localPath exists",
          "location": null,
          "status": "passed",
          "title": "fetches a local path if localPath exists"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getLocalVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getLocalVersionTypeDefs() returns null for remote path",
          "location": null,
          "status": "passed",
          "title": "returns null for remote path"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getLocalVersionTypeDefs()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getLocalVersionTypeDefs() returns null if localPath does not exist",
          "location": null,
          "status": "passed",
          "title": "returns null if localPath does not exist"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getLocalTypePathForVersion()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getLocalTypePathForVersion() appends the path to the debug folder",
          "location": null,
          "status": "passed",
          "title": "appends the path to the debug folder"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "getLocalTypePathForVersion()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types getLocalTypePathForVersion() returns null if no localPath",
          "location": null,
          "status": "passed",
          "title": "returns null if no localPath"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "updateEditorTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types updateEditorTypeDefinitions() tries to update the editor type definitions",
          "location": null,
          "status": "passed",
          "title": "tries to update the editor type definitions"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "updateEditorTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types updateEditorTypeDefinitions() it waits for Monaco to show up",
          "location": null,
          "status": "passed",
          "title": "it waits for Monaco to show up"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "updateEditorTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types updateEditorTypeDefinitions() it does not wait forever",
          "location": null,
          "status": "passed",
          "title": "it does not wait forever"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "updateEditorTypeDefinitions()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types updateEditorTypeDefinitions() handles definitions not existing",
          "location": null,
          "status": "passed",
          "title": "handles definitions not existing"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "removeTypeDefsForVersion()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types removeTypeDefsForVersion() removes a version's typedefs",
          "location": null,
          "status": "passed",
          "title": "removes a version's typedefs"
        },
        {
          "ancestorTitles": [
            "fetch-types",
            "removeTypeDefsForVersion()"
          ],
          "failureMessages": [],
          "fullName": "fetch-types removeTypeDefsForVersion() throws upon fs failure",
          "location": null,
          "status": "passed",
          "title": "throws upon fs failure"
        }
      ],
      "endTime": 1595019694871,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/fetch-types-spec.ts",
      "startTime": 1595019680331,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AppState"
          ],
          "failureMessages": [],
          "fullName": "AppState exists",
          "location": null,
          "status": "passed",
          "title": "exists"
        },
        {
          "ancestorTitles": [
            "AppState",
            "isUnsaved autorun handler"
          ],
          "failureMessages": [],
          "fullName": "AppState isUnsaved autorun handler can close the window if user accepts the dialog",
          "location": null,
          "status": "passed",
          "title": "can close the window if user accepts the dialog"
        },
        {
          "ancestorTitles": [
            "AppState",
            "isUnsaved autorun handler"
          ],
          "failureMessages": [],
          "fullName": "AppState isUnsaved autorun handler can close the app after user accepts dialog",
          "location": null,
          "status": "passed",
          "title": "can close the app after user accepts dialog"
        },
        {
          "ancestorTitles": [
            "AppState",
            "isUnsaved autorun handler"
          ],
          "failureMessages": [],
          "fullName": "AppState isUnsaved autorun handler takes no action if user cancels the dialog",
          "location": null,
          "status": "passed",
          "title": "takes no action if user cancels the dialog"
        },
        {
          "ancestorTitles": [
            "AppState",
            "isUnsaved autorun handler"
          ],
          "failureMessages": [],
          "fullName": "AppState isUnsaved autorun handler sets the onDidChangeModelContent handler if saved",
          "location": null,
          "status": "passed",
          "title": "sets the onDidChangeModelContent handler if saved"
        },
        {
          "ancestorTitles": [
            "AppState",
            "updateElectronVersions()"
          ],
          "failureMessages": [],
          "fullName": "AppState updateElectronVersions() handles errors gracefully",
          "location": null,
          "status": "passed",
          "title": "handles errors gracefully"
        },
        {
          "ancestorTitles": [
            "AppState",
            "getName()"
          ],
          "failureMessages": [],
          "fullName": "AppState getName() returns the name",
          "location": null,
          "status": "passed",
          "title": "returns the name"
        },
        {
          "ancestorTitles": [
            "AppState",
            "getName()"
          ],
          "failureMessages": [],
          "fullName": "AppState getName() returns the name, even if none exists",
          "location": null,
          "status": "passed",
          "title": "returns the name, even if none exists"
        },
        {
          "ancestorTitles": [
            "AppState",
            "get currentElectronVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState get currentElectronVersion() returns the current version",
          "location": null,
          "status": "passed",
          "title": "returns the current version"
        },
        {
          "ancestorTitles": [
            "AppState",
            "get currentElectronVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState get currentElectronVersion() falls back to the defaultVersion",
          "location": null,
          "status": "passed",
          "title": "falls back to the defaultVersion"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleConsole()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleConsole() toggles the console",
          "location": null,
          "status": "passed",
          "title": "toggles the console"
        },
        {
          "ancestorTitles": [
            "AppState",
            "clearConsole()"
          ],
          "failureMessages": [],
          "fullName": "AppState clearConsole() clears the console",
          "location": null,
          "status": "passed",
          "title": "clears the console"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleAuthDialog()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleAuthDialog() toggles the token dialog",
          "location": null,
          "status": "passed",
          "title": "toggles the token dialog"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleSettings()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleSettings() toggles the settings page",
          "location": null,
          "status": "passed",
          "title": "toggles the settings page"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleBisectCommands()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleBisectCommands() toggles visibility of the bisect commands",
          "location": null,
          "status": "passed",
          "title": "toggles visibility of the bisect commands"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleBisectCommands()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleBisectCommands() takes no action if bisect dialog is active",
          "location": null,
          "status": "passed",
          "title": "takes no action if bisect dialog is active"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleBisectCommands()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleBisectCommands() takes no action if bisect instance is active",
          "location": null,
          "status": "passed",
          "title": "takes no action if bisect instance is active"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleAddVersionDialog()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleAddVersionDialog() toggles the add version dialog",
          "location": null,
          "status": "passed",
          "title": "toggles the add version dialog"
        },
        {
          "ancestorTitles": [
            "AppState",
            "toggleGenericDialog()"
          ],
          "failureMessages": [],
          "fullName": "AppState toggleGenericDialog() toggles the warnign dialog",
          "location": null,
          "status": "passed",
          "title": "toggles the warnign dialog"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setIsQuitting()"
          ],
          "failureMessages": [],
          "fullName": "AppState setIsQuitting() sets isQuitting variable as true",
          "location": null,
          "status": "passed",
          "title": "sets isQuitting variable as true"
        },
        {
          "ancestorTitles": [
            "AppState",
            "disableTour()"
          ],
          "failureMessages": [],
          "fullName": "AppState disableTour() disables the tour",
          "location": null,
          "status": "passed",
          "title": "disables the tour"
        },
        {
          "ancestorTitles": [
            "AppState",
            "showTour()"
          ],
          "failureMessages": [],
          "fullName": "AppState showTour() shows the tour",
          "location": null,
          "status": "passed",
          "title": "shows the tour"
        },
        {
          "ancestorTitles": [
            "AppState",
            "versionsToShow()"
          ],
          "failureMessages": [],
          "fullName": "AppState versionsToShow() returns all versions for no filters",
          "location": null,
          "status": "passed",
          "title": "returns all versions for no filters"
        },
        {
          "ancestorTitles": [
            "AppState",
            "versionsToShow()"
          ],
          "failureMessages": [],
          "fullName": "AppState versionsToShow() handles empty items",
          "location": null,
          "status": "passed",
          "title": "handles empty items"
        },
        {
          "ancestorTitles": [
            "AppState",
            "versionsToShow()"
          ],
          "failureMessages": [],
          "fullName": "AppState versionsToShow() excludes channels",
          "location": null,
          "status": "passed",
          "title": "excludes channels"
        },
        {
          "ancestorTitles": [
            "AppState",
            "versionsToShow()"
          ],
          "failureMessages": [],
          "fullName": "AppState versionsToShow() excludes states",
          "location": null,
          "status": "passed",
          "title": "excludes states"
        },
        {
          "ancestorTitles": [
            "AppState",
            "removeVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState removeVersion() removes a version",
          "location": null,
          "status": "passed",
          "title": "removes a version"
        },
        {
          "ancestorTitles": [
            "AppState",
            "removeVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState removeVersion() does not remove it if not necessary",
          "location": null,
          "status": "passed",
          "title": "does not remove it if not necessary"
        },
        {
          "ancestorTitles": [
            "AppState",
            "removeVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState removeVersion() does not remove it if not necessary (version not existent)",
          "location": null,
          "status": "passed",
          "title": "does not remove it if not necessary (version not existent)"
        },
        {
          "ancestorTitles": [
            "AppState",
            "removeVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState removeVersion() removes (and not deletes) a local version",
          "location": null,
          "status": "passed",
          "title": "removes (and not deletes) a local version"
        },
        {
          "ancestorTitles": [
            "AppState",
            "downloadVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState downloadVersion() downloads a version",
          "location": null,
          "status": "passed",
          "title": "downloads a version"
        },
        {
          "ancestorTitles": [
            "AppState",
            "downloadVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState downloadVersion() downloads an unknown version",
          "location": null,
          "status": "passed",
          "title": "downloads an unknown version"
        },
        {
          "ancestorTitles": [
            "AppState",
            "downloadVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState downloadVersion() does not download a version if already ready",
          "location": null,
          "status": "passed",
          "title": "does not download a version if already ready"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState setVersion() falls back if a version does not exist",
          "location": null,
          "status": "passed",
          "title": "falls back if a version does not exist"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState setVersion() downloads a version if necessary",
          "location": null,
          "status": "passed",
          "title": "downloads a version if necessary"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState setVersion() possibly updates the editors",
          "location": null,
          "status": "passed",
          "title": "possibly updates the editors"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setTheme()"
          ],
          "failureMessages": [],
          "fullName": "AppState setTheme() calls setupTheme()",
          "location": null,
          "status": "passed",
          "title": "calls setupTheme()"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setTheme()"
          ],
          "failureMessages": [],
          "fullName": "AppState setTheme() handles a missing theme name",
          "location": null,
          "status": "passed",
          "title": "handles a missing theme name"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setGenericDialogOptions()"
          ],
          "failureMessages": [],
          "fullName": "AppState setGenericDialogOptions() sets the warning dialog options",
          "location": null,
          "status": "passed",
          "title": "sets the warning dialog options"
        },
        {
          "ancestorTitles": [
            "AppState",
            "addLocalVersion()"
          ],
          "failureMessages": [],
          "fullName": "AppState addLocalVersion() refreshes version state",
          "location": null,
          "status": "passed",
          "title": "refreshes version state"
        },
        {
          "ancestorTitles": [
            "AppState",
            "updateDownloadedVersionState()"
          ],
          "failureMessages": [],
          "fullName": "AppState updateDownloadedVersionState() downloads a version if necessary",
          "location": null,
          "status": "passed",
          "title": "downloads a version if necessary"
        },
        {
          "ancestorTitles": [
            "AppState",
            "updateDownloadedVersionState()"
          ],
          "failureMessages": [],
          "fullName": "AppState updateDownloadedVersionState() keeps downloading state intact",
          "location": null,
          "status": "passed",
          "title": "keeps downloading state intact"
        },
        {
          "ancestorTitles": [
            "AppState",
            "signOutGitHub()"
          ],
          "failureMessages": [],
          "fullName": "AppState signOutGitHub() resets all GitHub information",
          "location": null,
          "status": "passed",
          "title": "resets all GitHub information"
        },
        {
          "ancestorTitles": [
            "AppState",
            "pushOutput()"
          ],
          "failureMessages": [],
          "fullName": "AppState pushOutput() takes a fancy buffer and turns it into output",
          "location": null,
          "status": "passed",
          "title": "takes a fancy buffer and turns it into output"
        },
        {
          "ancestorTitles": [
            "AppState",
            "pushOutput()"
          ],
          "failureMessages": [],
          "fullName": "AppState pushOutput() ignores the \"Debuggeer listening on...\" output",
          "location": null,
          "status": "passed",
          "title": "ignores the \"Debuggeer listening on...\" output"
        },
        {
          "ancestorTitles": [
            "AppState",
            "pushOutput()"
          ],
          "failureMessages": [],
          "fullName": "AppState pushOutput() ignores the \"For help see...\" output",
          "location": null,
          "status": "passed",
          "title": "ignores the \"For help see...\" output"
        },
        {
          "ancestorTitles": [
            "AppState",
            "pushOutput()"
          ],
          "failureMessages": [],
          "fullName": "AppState pushOutput() handles a complex buffer on Win32",
          "location": null,
          "status": "passed",
          "title": "handles a complex buffer on Win32"
        },
        {
          "ancestorTitles": [
            "AppState",
            "pushError()"
          ],
          "failureMessages": [],
          "fullName": "AppState pushError() pushes an error",
          "location": null,
          "status": "passed",
          "title": "pushes an error"
        },
        {
          "ancestorTitles": [
            "AppState",
            "getAndRemoveEditorValueBackup()"
          ],
          "failureMessages": [],
          "fullName": "AppState getAndRemoveEditorValueBackup() returns null if there is no backup",
          "location": null,
          "status": "passed",
          "title": "returns null if there is no backup"
        },
        {
          "ancestorTitles": [
            "AppState",
            "getAndRemoveEditorValueBackup()"
          ],
          "failureMessages": [],
          "fullName": "AppState getAndRemoveEditorValueBackup() returns and deletes a backup if there is one",
          "location": null,
          "status": "passed",
          "title": "returns and deletes a backup if there is one"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setVisibleMosaics()"
          ],
          "failureMessages": [],
          "fullName": "AppState setVisibleMosaics() updates the visible editors and creates a backup",
          "location": null,
          "status": "passed",
          "title": "updates the visible editors and creates a backup"
        },
        {
          "ancestorTitles": [
            "AppState",
            "setVisibleMosaics()"
          ],
          "failureMessages": [],
          "fullName": "AppState setVisibleMosaics() removes the backup for a non-editor right away",
          "location": null,
          "status": "passed",
          "title": "removes the backup for a non-editor right away"
        },
        {
          "ancestorTitles": [
            "AppState",
            "hideAndBackupMosaic()"
          ],
          "failureMessages": [],
          "fullName": "AppState hideAndBackupMosaic() hides a given editor and creates a backup",
          "location": null,
          "status": "passed",
          "title": "hides a given editor and creates a backup"
        },
        {
          "ancestorTitles": [
            "AppState",
            "showMosaic()"
          ],
          "failureMessages": [],
          "fullName": "AppState showMosaic() shows a given editor",
          "location": null,
          "status": "passed",
          "title": "shows a given editor"
        },
        {
          "ancestorTitles": [
            "AppState",
            "resetEditorLayout()"
          ],
          "failureMessages": [],
          "fullName": "AppState resetEditorLayout() Puts editors in default arrangement",
          "location": null,
          "status": "passed",
          "title": "Puts editors in default arrangement"
        }
      ],
      "endTime": 1595019695711,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/state-spec.ts",
      "startTime": 1595019680373,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Editors component",
            "setup()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setup() renders the app",
          "location": null,
          "status": "passed",
          "title": "renders the app"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setup()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setup() creates a touch bar manager on macOS",
          "location": null,
          "status": "passed",
          "title": "creates a touch bar manager on macOS"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setup()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setup() does not create a touch bar manager on Windows and Linux",
          "location": null,
          "status": "passed",
          "title": "does not create a touch bar manager on Windows and Linux"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "getEditorValues()"
          ],
          "failureMessages": [],
          "fullName": "Editors component getEditorValues() gets values",
          "location": null,
          "status": "passed",
          "title": "gets values"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "getEditorValues()"
          ],
          "failureMessages": [],
          "fullName": "Editors component getEditorValues() handles missing editors",
          "location": null,
          "status": "passed",
          "title": "handles missing editors"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "getEditorValues()"
          ],
          "failureMessages": [],
          "fullName": "Editors component getEditorValues() throws if the Fiddle object is not present",
          "location": null,
          "status": "passed",
          "title": "throws if the Fiddle object is not present"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "replaceFiddle()"
          ],
          "failureMessages": [],
          "fullName": "Editors component replaceFiddle() sets editor values and source info",
          "location": null,
          "status": "passed",
          "title": "sets editor values and source info"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "replaceFiddle()"
          ],
          "failureMessages": [],
          "fullName": "Editors component replaceFiddle() unsets state of previous source when called",
          "location": null,
          "status": "passed",
          "title": "unsets state of previous source when called"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "replaceFiddle()"
          ],
          "failureMessages": [],
          "fullName": "Editors component replaceFiddle() marks the new Fiddle as Saved",
          "location": null,
          "status": "passed",
          "title": "marks the new Fiddle as Saved"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "replaceFiddle()",
            "when current Fiddle is unsaved and prompt appears"
          ],
          "failureMessages": [],
          "fullName": "Editors component replaceFiddle() when current Fiddle is unsaved and prompt appears takes no action if prompt is rejected",
          "location": null,
          "status": "passed",
          "title": "takes no action if prompt is rejected"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "replaceFiddle()",
            "when current Fiddle is unsaved and prompt appears"
          ],
          "failureMessages": [],
          "fullName": "Editors component replaceFiddle() when current Fiddle is unsaved and prompt appears sets editor values and source info if prompt is accepted",
          "location": null,
          "status": "passed",
          "title": "sets editor values and source info if prompt is accepted"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setEditorValues()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setEditorValues() attempts to set values",
          "location": null,
          "status": "passed",
          "title": "attempts to set values"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setEditorValues()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setEditorValues() attempts to set values for closed editors",
          "location": null,
          "status": "passed",
          "title": "attempts to set values for closed editors"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setEditorValues()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setEditorValues() throws if the Fiddle object is not present",
          "location": null,
          "status": "passed",
          "title": "throws if the Fiddle object is not present"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setEditorValues()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setEditorValues() does not set a value if none passed in",
          "location": null,
          "status": "passed",
          "title": "does not set a value if none passed in"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setupResizeListener()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setupResizeListener() attaches to the handler",
          "location": null,
          "status": "passed",
          "title": "attaches to the handler"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setupTheme()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setupTheme() adds the current theme's css to the document",
          "location": null,
          "status": "passed",
          "title": "adds the current theme's css to the document"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setupTheme()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setupTheme() removes the dark theme option if required",
          "location": null,
          "status": "passed",
          "title": "removes the dark theme option if required"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "setupTheme()"
          ],
          "failureMessages": [],
          "fullName": "Editors component setupTheme() adds the dark theme option if required",
          "location": null,
          "status": "passed",
          "title": "adds the dark theme option if required"
        }
      ],
      "endTime": 1595019696113,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/app-spec.tsx",
      "startTime": 1595019680358,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component runs",
          "location": null,
          "status": "passed",
          "title": "runs"
        },
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component runs with logging when enabled",
          "location": null,
          "status": "passed",
          "title": "runs with logging when enabled"
        },
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component emits output",
          "location": null,
          "status": "passed",
          "title": "emits output"
        },
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component stops on close",
          "location": null,
          "status": "passed",
          "title": "stops on close"
        },
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component stops on stop()",
          "location": null,
          "status": "passed",
          "title": "stops on stop()"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "run()"
          ],
          "failureMessages": [],
          "fullName": "Runner component run() cleans the app data dir after a run",
          "location": null,
          "status": "passed",
          "title": "cleans the app data dir after a run"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "run()"
          ],
          "failureMessages": [],
          "fullName": "Runner component run() does not clean the app data dir after a run if configured",
          "location": null,
          "status": "passed",
          "title": "does not clean the app data dir after a run if configured"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "run()"
          ],
          "failureMessages": [],
          "fullName": "Runner component run() automatically cleans the console when enabled",
          "location": null,
          "status": "passed",
          "title": "automatically cleans the console when enabled"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "run()"
          ],
          "failureMessages": [],
          "fullName": "Runner component run() does not run version not yet downloaded",
          "location": null,
          "status": "passed",
          "title": "does not run version not yet downloaded"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "run()"
          ],
          "failureMessages": [],
          "fullName": "Runner component run() does not run if writing files fails",
          "location": null,
          "status": "passed",
          "title": "does not run if writing files fails"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "run()"
          ],
          "failureMessages": [],
          "fullName": "Runner component run() does not run if installing modules fails",
          "location": null,
          "status": "passed",
          "title": "does not run if installing modules fails"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "installModules()"
          ],
          "failureMessages": [],
          "fullName": "Runner component installModules() installs modules",
          "location": null,
          "status": "passed",
          "title": "installs modules"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "installModules()"
          ],
          "failureMessages": [],
          "fullName": "Runner component installModules() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "performForgeOperation()"
          ],
          "failureMessages": [],
          "fullName": "Runner component performForgeOperation() runs in response to an IPC event",
          "location": null,
          "status": "passed",
          "title": "runs in response to an IPC event"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "performForgeOperation()"
          ],
          "failureMessages": [],
          "fullName": "Runner component performForgeOperation() performs a package operation",
          "location": null,
          "status": "passed",
          "title": "performs a package operation"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "performForgeOperation()"
          ],
          "failureMessages": [],
          "fullName": "Runner component performForgeOperation() performs a make operation",
          "location": null,
          "status": "passed",
          "title": "performs a make operation"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "performForgeOperation()"
          ],
          "failureMessages": [],
          "fullName": "Runner component performForgeOperation() handles an error in saveToTemp()",
          "location": null,
          "status": "passed",
          "title": "handles an error in saveToTemp()"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "performForgeOperation()"
          ],
          "failureMessages": [],
          "fullName": "Runner component performForgeOperation() handles an error in npmInstall()",
          "location": null,
          "status": "passed",
          "title": "handles an error in npmInstall()"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "performForgeOperation()"
          ],
          "failureMessages": [],
          "fullName": "Runner component performForgeOperation() handles an error in npmRun()",
          "location": null,
          "status": "passed",
          "title": "handles an error in npmRun()"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "performForgeOperation()"
          ],
          "failureMessages": [],
          "fullName": "Runner component performForgeOperation() does attempt a forge operation if npm is not installed",
          "location": null,
          "status": "passed",
          "title": "does attempt a forge operation if npm is not installed"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "installModulesForEditor()"
          ],
          "failureMessages": [],
          "fullName": "Runner component installModulesForEditor() does not attempt installation if npm is not installed",
          "location": null,
          "status": "passed",
          "title": "does not attempt installation if npm is not installed"
        },
        {
          "ancestorTitles": [
            "Runner component",
            "installModulesForEditor()"
          ],
          "failureMessages": [],
          "fullName": "Runner component installModulesForEditor() does attempt installation if npm is installed",
          "location": null,
          "status": "passed",
          "title": "does attempt installation if npm is installed"
        }
      ],
      "endTime": 1595019696659,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/runner-spec.tsx",
      "startTime": 1595019694894,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "RemoteLoader",
            "fetchGistAndLoad()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader fetchGistAndLoad() loads a fiddle",
          "location": null,
          "status": "passed",
          "title": "loads a fiddle"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "fetchGistAndLoad()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader fetchGistAndLoad() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "fetchExampleAndLoad()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader fetchExampleAndLoad() loads an Electron example",
          "location": null,
          "status": "passed",
          "title": "loads an Electron example"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "fetchExampleAndLoad()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader fetchExampleAndLoad() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "fetchExampleAndLoad()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader fetchExampleAndLoad() handles incorrect results",
          "location": null,
          "status": "passed",
          "title": "handles incorrect results"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "setElectronVersionFromRef()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader setElectronVersionFromRef() sets version from ref if release channel enabled",
          "location": null,
          "status": "passed",
          "title": "sets version from ref if release channel enabled"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "setElectronVersionFromRef()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader setElectronVersionFromRef() enables release channel when authorized",
          "location": null,
          "status": "passed",
          "title": "enables release channel when authorized"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "setElectronVersionFromRef()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader setElectronVersionFromRef() does not load unsupported versions of Fiddle",
          "location": null,
          "status": "passed",
          "title": "does not load unsupported versions of Fiddle"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "getPackageFromRef()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader getPackageFromRef() gets electron version from package.json",
          "location": null,
          "status": "passed",
          "title": "gets electron version from package.json"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "verifyRemoteLoad()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader verifyRemoteLoad() asks the user if they want to load remote content",
          "location": null,
          "status": "passed",
          "title": "asks the user if they want to load remote content"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "verifyReleaseChannelEnabled"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader verifyReleaseChannelEnabled asks the user if they want to enable a release channel",
          "location": null,
          "status": "passed",
          "title": "asks the user if they want to enable a release channel"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "loadFiddleFromElectronExample()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader loadFiddleFromElectronExample() loads the example with confirmation",
          "location": null,
          "status": "passed",
          "title": "loads the example with confirmation"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "loadFiddleFromElectronExample()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader loadFiddleFromElectronExample() does not load the example without confirmation",
          "location": null,
          "status": "passed",
          "title": "does not load the example without confirmation"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "loadFiddleFromGist()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader loadFiddleFromGist() loads the example with confirmation",
          "location": null,
          "status": "passed",
          "title": "loads the example with confirmation"
        },
        {
          "ancestorTitles": [
            "RemoteLoader",
            "loadFiddleFromGist()"
          ],
          "failureMessages": [],
          "fullName": "RemoteLoader loadFiddleFromGist() does not load the example without confirmation",
          "location": null,
          "status": "passed",
          "title": "does not load the example without confirmation"
        }
      ],
      "endTime": 1595019697380,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/remote-loader-spec.ts",
      "startTime": 1595019695830,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "menu",
            "setupMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu setupMenu() creates a menu (Darwin)",
          "location": null,
          "status": "passed",
          "title": "creates a menu (Darwin)"
        },
        {
          "ancestorTitles": [
            "menu",
            "setupMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu setupMenu() creates a menu (Windows)",
          "location": null,
          "status": "passed",
          "title": "creates a menu (Windows)"
        },
        {
          "ancestorTitles": [
            "menu",
            "setupMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu setupMenu() creates a menu (Linux)",
          "location": null,
          "status": "passed",
          "title": "creates a menu (Linux)"
        },
        {
          "ancestorTitles": [
            "menu",
            "setupMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu setupMenu() adds Monaco toggle options",
          "location": null,
          "status": "passed",
          "title": "adds Monaco toggle options"
        },
        {
          "ancestorTitles": [
            "menu",
            "setupMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu setupMenu() adds Bisect toggle",
          "location": null,
          "status": "passed",
          "title": "adds Bisect toggle"
        },
        {
          "ancestorTitles": [
            "menu",
            "setupMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu setupMenu() overwrites Select All command",
          "location": null,
          "status": "passed",
          "title": "overwrites Select All command"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getHelpItems()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getHelpItems() shows the welcome tour",
          "location": null,
          "status": "passed",
          "title": "shows the welcome tour"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getHelpItems()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getHelpItems() toggles developer tools",
          "location": null,
          "status": "passed",
          "title": "toggles developer tools"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getHelpItems()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getHelpItems() opens the Fiddle repo",
          "location": null,
          "status": "passed",
          "title": "opens the Fiddle repo"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getHelpItems()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getHelpItems() opens the Electron repo",
          "location": null,
          "status": "passed",
          "title": "opens the Electron repo"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getHelpItems()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getHelpItems() opens the Electron issues",
          "location": null,
          "status": "passed",
          "title": "opens the Electron issues"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getPreferencesItems()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getPreferencesItems() shows the preferences",
          "location": null,
          "status": "passed",
          "title": "shows the preferences"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getQuitItems()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getQuitItems() quits the app",
          "location": null,
          "status": "passed",
          "title": "quits the app"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getShowMeMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getShowMeMenu() attempts to open a template on click",
          "location": null,
          "status": "passed",
          "title": "attempts to open a template on click"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getTasksMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getTasksMenu() runs the fiddle",
          "location": null,
          "status": "passed",
          "title": "runs the fiddle"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getTasksMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getTasksMenu() packages the fiddle",
          "location": null,
          "status": "passed",
          "title": "packages the fiddle"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getTasksMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getTasksMenu() makes the fiddle",
          "location": null,
          "status": "passed",
          "title": "makes the fiddle"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getFileMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getFileMenu() creates a new fiddle",
          "location": null,
          "status": "passed",
          "title": "creates a new fiddle"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getFileMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getFileMenu() creates a new window",
          "location": null,
          "status": "passed",
          "title": "creates a new window"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getFileMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getFileMenu() opens a Fiddle",
          "location": null,
          "status": "passed",
          "title": "opens a Fiddle"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getFileMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getFileMenu() saves a Fiddle",
          "location": null,
          "status": "passed",
          "title": "saves a Fiddle"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getFileMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getFileMenu() saves a Fiddle as",
          "location": null,
          "status": "passed",
          "title": "saves a Fiddle as"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getFileMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getFileMenu() saves a Fiddle as a gist",
          "location": null,
          "status": "passed",
          "title": "saves a Fiddle as a gist"
        },
        {
          "ancestorTitles": [
            "menu",
            "menu groups",
            "getFileMenu()"
          ],
          "failureMessages": [],
          "fullName": "menu menu groups getFileMenu() saves a Fiddle as a forge project",
          "location": null,
          "status": "passed",
          "title": "saves a Fiddle as a forge project"
        }
      ],
      "endTime": 1595019697948,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/menu-spec.ts",
      "startTime": 1595019696190,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "FileManager",
            "openFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager openFiddle() opens a local fiddle",
          "location": null,
          "status": "passed",
          "title": "opens a local fiddle"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "openFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager openFiddle() writes empty strings if readFile throws an error",
          "location": null,
          "status": "passed",
          "title": "writes empty strings if readFile throws an error"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "openFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager openFiddle() runs it on IPC event",
          "location": null,
          "status": "passed",
          "title": "runs it on IPC event"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "openFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager openFiddle() does not do anything with incorrect inputs",
          "location": null,
          "status": "passed",
          "title": "does not do anything with incorrect inputs"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "openFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager openFiddle() does not do anything if cancelled",
          "location": null,
          "status": "passed",
          "title": "does not do anything if cancelled"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveFiddle() saves all non-empty files in Fiddle",
          "location": null,
          "status": "passed",
          "title": "saves all non-empty files in Fiddle"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveFiddle() removes a file that is newly empty",
          "location": null,
          "status": "passed",
          "title": "removes a file that is newly empty"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveFiddle() handles an error (output)",
          "location": null,
          "status": "passed",
          "title": "handles an error (output)"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveFiddle() handles an error (remove)",
          "location": null,
          "status": "passed",
          "title": "handles an error (remove)"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveFiddle() runs saveFiddle (normal) on IPC event",
          "location": null,
          "status": "passed",
          "title": "runs saveFiddle (normal) on IPC event"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveFiddle() runs saveFiddle (forge) on IPC event",
          "location": null,
          "status": "passed",
          "title": "runs saveFiddle (forge) on IPC event"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveFiddle()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveFiddle() asks for a path via IPC if none can  be found",
          "location": null,
          "status": "passed",
          "title": "asks for a path via IPC if none can  be found"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveToTemp()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveToTemp() saves as a local fiddle",
          "location": null,
          "status": "passed",
          "title": "saves as a local fiddle"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "saveToTemp()"
          ],
          "failureMessages": [],
          "fullName": "FileManager saveToTemp() throws an error",
          "location": null,
          "status": "passed",
          "title": "throws an error"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "openTemplate()"
          ],
          "failureMessages": [],
          "fullName": "FileManager openTemplate() attempts to open a template",
          "location": null,
          "status": "passed",
          "title": "attempts to open a template"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "openTemplate()"
          ],
          "failureMessages": [],
          "fullName": "FileManager openTemplate() runs openTemplate on IPC event",
          "location": null,
          "status": "passed",
          "title": "runs openTemplate on IPC event"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "cleanup()"
          ],
          "failureMessages": [],
          "fullName": "FileManager cleanup() attempts to remove a directory if it exists",
          "location": null,
          "status": "passed",
          "title": "attempts to remove a directory if it exists"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "cleanup()"
          ],
          "failureMessages": [],
          "fullName": "FileManager cleanup() does not attempt to remove a directory if it does not exists",
          "location": null,
          "status": "passed",
          "title": "does not attempt to remove a directory if it does not exists"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "cleanup()"
          ],
          "failureMessages": [],
          "fullName": "FileManager cleanup() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "getFiles()"
          ],
          "failureMessages": [],
          "fullName": "FileManager getFiles() applies transforms",
          "location": null,
          "status": "passed",
          "title": "applies transforms"
        },
        {
          "ancestorTitles": [
            "FileManager",
            "getFiles()"
          ],
          "failureMessages": [],
          "fullName": "FileManager getFiles() handles transform error",
          "location": null,
          "status": "passed",
          "title": "handles transform error"
        }
      ],
      "endTime": 1595019698644,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/file-manager-spec.ts",
      "startTime": 1595019697394,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "versions",
            "getDefaultVersion()"
          ],
          "failureMessages": [],
          "fullName": "versions getDefaultVersion() handles a stored version",
          "location": null,
          "status": "passed",
          "title": "handles a stored version"
        },
        {
          "ancestorTitles": [
            "versions",
            "getDefaultVersion()"
          ],
          "failureMessages": [],
          "fullName": "versions getDefaultVersion() handles a v-prefixed version",
          "location": null,
          "status": "passed",
          "title": "handles a v-prefixed version"
        },
        {
          "ancestorTitles": [
            "versions",
            "getDefaultVersion()"
          ],
          "failureMessages": [],
          "fullName": "versions getDefaultVersion() handles garbage data",
          "location": null,
          "status": "passed",
          "title": "handles garbage data"
        },
        {
          "ancestorTitles": [
            "versions",
            "getDefaultVersion()"
          ],
          "failureMessages": [],
          "fullName": "versions getDefaultVersion() handles if no version is set",
          "location": null,
          "status": "passed",
          "title": "handles if no version is set"
        },
        {
          "ancestorTitles": [
            "versions",
            "getDefaultVersion()"
          ],
          "failureMessages": [],
          "fullName": "versions getDefaultVersion() throws if everything goes wrong",
          "location": null,
          "status": "passed",
          "title": "throws if everything goes wrong"
        },
        {
          "ancestorTitles": [
            "versions",
            "getReleaseChannel()"
          ],
          "failureMessages": [],
          "fullName": "versions getReleaseChannel() identifies a nightly release",
          "location": null,
          "status": "passed",
          "title": "identifies a nightly release"
        },
        {
          "ancestorTitles": [
            "versions",
            "getReleaseChannel()"
          ],
          "failureMessages": [],
          "fullName": "versions getReleaseChannel() identifies a beta release",
          "location": null,
          "status": "passed",
          "title": "identifies a beta release"
        },
        {
          "ancestorTitles": [
            "versions",
            "getReleaseChannel()"
          ],
          "failureMessages": [],
          "fullName": "versions getReleaseChannel() identifies an unsupported release",
          "location": null,
          "status": "passed",
          "title": "identifies an unsupported release"
        },
        {
          "ancestorTitles": [
            "versions",
            "getReleaseChannel()"
          ],
          "failureMessages": [],
          "fullName": "versions getReleaseChannel() identifies a stable release",
          "location": null,
          "status": "passed",
          "title": "identifies a stable release"
        },
        {
          "ancestorTitles": [
            "versions",
            "getReleaseChannel()"
          ],
          "failureMessages": [],
          "fullName": "versions getReleaseChannel() identifies an unknown release as stable",
          "location": null,
          "status": "passed",
          "title": "identifies an unknown release as stable"
        },
        {
          "ancestorTitles": [
            "versions",
            "addLocalVersion()"
          ],
          "failureMessages": [],
          "fullName": "versions addLocalVersion() adds a local version",
          "location": null,
          "status": "passed",
          "title": "adds a local version"
        },
        {
          "ancestorTitles": [
            "versions",
            "addLocalVersion()"
          ],
          "failureMessages": [],
          "fullName": "versions addLocalVersion() does not add duplicates",
          "location": null,
          "status": "passed",
          "title": "does not add duplicates"
        },
        {
          "ancestorTitles": [
            "versions",
            "saveLocalVersions()"
          ],
          "failureMessages": [],
          "fullName": "versions saveLocalVersions() saves local versions",
          "location": null,
          "status": "passed",
          "title": "saves local versions"
        },
        {
          "ancestorTitles": [
            "versions",
            "getLocalVersions"
          ],
          "failureMessages": [],
          "fullName": "versions getLocalVersions returns an empty array if none can be found",
          "location": null,
          "status": "passed",
          "title": "returns an empty array if none can be found"
        },
        {
          "ancestorTitles": [
            "versions",
            "getLocalVersions"
          ],
          "failureMessages": [],
          "fullName": "versions getLocalVersions migrates an old format if necessary",
          "location": null,
          "status": "passed",
          "title": "migrates an old format if necessary"
        },
        {
          "ancestorTitles": [
            "versions",
            "fetchVersions()"
          ],
          "failureMessages": [],
          "fullName": "versions fetchVersions() fetches versions >= 0.24.0",
          "location": null,
          "status": "passed",
          "title": "fetches versions >= 0.24.0"
        },
        {
          "ancestorTitles": [
            "versions",
            "getKnownVersions()"
          ],
          "failureMessages": [],
          "fullName": "versions getKnownVersions() tries to get versions from localStorage",
          "location": null,
          "status": "passed",
          "title": "tries to get versions from localStorage"
        },
        {
          "ancestorTitles": [
            "versions",
            "getKnownVersions()"
          ],
          "failureMessages": [],
          "fullName": "versions getKnownVersions() falls back to a local require",
          "location": null,
          "status": "passed",
          "title": "falls back to a local require"
        },
        {
          "ancestorTitles": [
            "versions",
            "getKnownVersions()"
          ],
          "failureMessages": [],
          "fullName": "versions getKnownVersions() falls back to a local require",
          "location": null,
          "status": "passed",
          "title": "falls back to a local require"
        },
        {
          "ancestorTitles": [
            "versions",
            "getUpdatedElectronVersions()"
          ],
          "failureMessages": [],
          "fullName": "versions getUpdatedElectronVersions() gets known versions",
          "location": null,
          "status": "passed",
          "title": "gets known versions"
        }
      ],
      "endTime": 1595019698968,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/versions-spec.ts",
      "startTime": 1595019697976,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "context-menu",
            "getContextMenu()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getContextMenu() attaches to the context-menu",
          "location": null,
          "status": "passed",
          "title": "attaches to the context-menu"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getContextMenu()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getContextMenu() creates a default context-menu with inspect for dev mode",
          "location": null,
          "status": "passed",
          "title": "creates a default context-menu with inspect for dev mode"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getContextMenu()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getContextMenu() creates a default context-menu without inspect in production",
          "location": null,
          "status": "passed",
          "title": "creates a default context-menu without inspect in production"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getContextMenu()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getContextMenu() disables cut/copy/paste if not in editFlags",
          "location": null,
          "status": "passed",
          "title": "disables cut/copy/paste if not in editFlags"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getContextMenu()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getContextMenu() enables cut/copy/paste if in editFlags",
          "location": null,
          "status": "passed",
          "title": "enables cut/copy/paste if in editFlags"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getInspectItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getInspectItems() returns an empty array if not in devMode",
          "location": null,
          "status": "passed",
          "title": "returns an empty array if not in devMode"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getInspectItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getInspectItems() returns an inspect item if in devMode",
          "location": null,
          "status": "passed",
          "title": "returns an inspect item if in devMode"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getInspectItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getInspectItems() inspects on click",
          "location": null,
          "status": "passed",
          "title": "inspects on click"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getInspectItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getInspectItems() focuses the dev tools if already open",
          "location": null,
          "status": "passed",
          "title": "focuses the dev tools if already open"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getInspectItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getInspectItems() catches an error",
          "location": null,
          "status": "passed",
          "title": "catches an error"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getMonacoItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getMonacoItems() returns an empty array if canPaste is false",
          "location": null,
          "status": "passed",
          "title": "returns an empty array if canPaste is false"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getMonacoItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getMonacoItems() returns an array if the page url suggest the editor is up",
          "location": null,
          "status": "passed",
          "title": "returns an array if the page url suggest the editor is up"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getMonacoItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getMonacoItems() executes an IPC send() for each element",
          "location": null,
          "status": "passed",
          "title": "executes an IPC send() for each element"
        },
        {
          "ancestorTitles": [
            "context-menu",
            "getRunItems()"
          ],
          "failureMessages": [],
          "fullName": "context-menu getRunItems() executes an IPC send() on click",
          "location": null,
          "status": "passed",
          "title": "executes an IPC send() on click"
        }
      ],
      "endTime": 1595019699920,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/context-menu-spec.ts",
      "startTime": 1595019698698,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "binary",
            "remove()"
          ],
          "failureMessages": [],
          "fullName": "binary remove() removes a version",
          "location": null,
          "status": "passed",
          "title": "removes a version"
        },
        {
          "ancestorTitles": [
            "binary",
            "remove()"
          ],
          "failureMessages": [],
          "fullName": "binary remove() retries on failure",
          "location": null,
          "status": "passed",
          "title": "retries on failure"
        },
        {
          "ancestorTitles": [
            "binary",
            "remove()"
          ],
          "failureMessages": [],
          "fullName": "binary remove() attempts to clean up the version's associated typedefs",
          "location": null,
          "status": "passed",
          "title": "attempts to clean up the version's associated typedefs"
        },
        {
          "ancestorTitles": [
            "binary",
            "remove()"
          ],
          "failureMessages": [],
          "fullName": "binary remove() retries typedef cleanup upon failure",
          "location": null,
          "status": "passed",
          "title": "retries typedef cleanup upon failure"
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadedVersions()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadedVersions() finds downloaded versions",
          "location": null,
          "status": "passed",
          "title": "finds downloaded versions"
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadedVersions()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadedVersions() is okay without versions ",
          "location": null,
          "status": "passed",
          "title": "is okay without versions "
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadedVersions()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadedVersions() is okay without versions and with errors",
          "location": null,
          "status": "passed",
          "title": "is okay without versions and with errors"
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadingVersions()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadingVersions() returns currently downloading versions",
          "location": null,
          "status": "passed",
          "title": "returns currently downloading versions"
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadPath()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadPath() returns the correct path on Windows",
          "location": null,
          "status": "passed",
          "title": "returns the correct path on Windows"
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadPath()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadPath() returns the correct path on Linux",
          "location": null,
          "status": "passed",
          "title": "returns the correct path on Linux"
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadPath()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadPath() returns the correct path on macOS",
          "location": null,
          "status": "passed",
          "title": "returns the correct path on macOS"
        },
        {
          "ancestorTitles": [
            "binary",
            "getDownloadPath()"
          ],
          "failureMessages": [],
          "fullName": "binary getDownloadPath() throws on other platforms",
          "location": null,
          "status": "passed",
          "title": "throws on other platforms"
        },
        {
          "ancestorTitles": [
            "binary",
            "setupBinary()"
          ],
          "failureMessages": [],
          "fullName": "binary setupBinary() downloads a version it hasn't seen before",
          "location": null,
          "status": "passed",
          "title": "downloads a version it hasn't seen before"
        },
        {
          "ancestorTitles": [
            "binary",
            "setupBinary()"
          ],
          "failureMessages": [],
          "fullName": "binary setupBinary() does not download a version again",
          "location": null,
          "status": "passed",
          "title": "does not download a version again"
        },
        {
          "ancestorTitles": [
            "binary",
            "setupBinary()"
          ],
          "failureMessages": [],
          "fullName": "binary setupBinary() does not download a version while already downloading",
          "location": null,
          "status": "passed",
          "title": "does not download a version while already downloading"
        },
        {
          "ancestorTitles": [
            "binary",
            "setupBinary()"
          ],
          "failureMessages": [],
          "fullName": "binary setupBinary() handles an error in the zip file",
          "location": null,
          "status": "passed",
          "title": "handles an error in the zip file"
        }
      ],
      "endTime": 1595019700228,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/binary-spec.ts",
      "startTime": 1595019698999,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Editors component"
          ],
          "failureMessages": [],
          "fullName": "Editors component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "Editors component"
          ],
          "failureMessages": [],
          "fullName": "Editors component does not execute command if not supported",
          "location": null,
          "status": "passed",
          "title": "does not execute command if not supported"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "toggleEditorOption()"
          ],
          "failureMessages": [],
          "fullName": "Editors component toggleEditorOption() handles a missing ElectronFiddle global",
          "location": null,
          "status": "passed",
          "title": "handles a missing ElectronFiddle global"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "toggleEditorOption()"
          ],
          "failureMessages": [],
          "fullName": "Editors component toggleEditorOption() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "toggleEditorOption()"
          ],
          "failureMessages": [],
          "fullName": "Editors component toggleEditorOption() updates a setting",
          "location": null,
          "status": "passed",
          "title": "updates a setting"
        },
        {
          "ancestorTitles": [
            "Editors component"
          ],
          "failureMessages": [],
          "fullName": "Editors component renders a toolbar",
          "location": null,
          "status": "passed",
          "title": "renders a toolbar"
        },
        {
          "ancestorTitles": [
            "Editors component"
          ],
          "failureMessages": [],
          "fullName": "Editors component does not render toolbar controls if only one editor exists",
          "location": null,
          "status": "passed",
          "title": "does not render toolbar controls if only one editor exists"
        },
        {
          "ancestorTitles": [
            "Editors component"
          ],
          "failureMessages": [],
          "fullName": "Editors component componentWillUnmount() unsubscribes the layout reaction",
          "location": null,
          "status": "passed",
          "title": "componentWillUnmount() unsubscribes the layout reaction"
        },
        {
          "ancestorTitles": [
            "Editors component"
          ],
          "failureMessages": [],
          "fullName": "Editors component onChange() updates the mosaic arrangement in the appState",
          "location": null,
          "status": "passed",
          "title": "onChange() updates the mosaic arrangement in the appState"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "IPC commands"
          ],
          "failureMessages": [],
          "fullName": "Editors component IPC commands handles a MONACO_EXECUTE_COMMAND command",
          "location": null,
          "status": "passed",
          "title": "handles a MONACO_EXECUTE_COMMAND command"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "IPC commands"
          ],
          "failureMessages": [],
          "fullName": "Editors component IPC commands handles an FS_NEW_FIDDLE command",
          "location": null,
          "status": "passed",
          "title": "handles an FS_NEW_FIDDLE command"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "IPC commands"
          ],
          "failureMessages": [],
          "fullName": "Editors component IPC commands handles a SELECT_ALL_IN_EDITOR command",
          "location": null,
          "status": "passed",
          "title": "handles a SELECT_ALL_IN_EDITOR command"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "IPC commands"
          ],
          "failureMessages": [],
          "fullName": "Editors component IPC commands handles the monaco editor option commands",
          "location": null,
          "status": "passed",
          "title": "handles the monaco editor option commands"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "loadMonaco()"
          ],
          "failureMessages": [],
          "fullName": "Editors component loadMonaco() loads Monaco",
          "location": null,
          "status": "passed",
          "title": "loads Monaco"
        },
        {
          "ancestorTitles": [
            "Editors component",
            "disposeLayoutAutorun()"
          ],
          "failureMessages": [],
          "fullName": "Editors component disposeLayoutAutorun() automatically updates the layout when the mosaic arrangement changes",
          "location": null,
          "status": "passed",
          "title": "automatically updates the layout when the mosaic arrangement changes"
        }
      ],
      "endTime": 1595019700663,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/editors-spec.tsx",
      "startTime": 1595019696673,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Editor component"
          ],
          "failureMessages": [],
          "fullName": "Editor component renders the editor container",
          "location": null,
          "status": "passed",
          "title": "renders the editor container"
        },
        {
          "ancestorTitles": [
            "Editor component"
          ],
          "failureMessages": [],
          "fullName": "Editor component correctly sets the language",
          "location": null,
          "status": "passed",
          "title": "correctly sets the language"
        },
        {
          "ancestorTitles": [
            "Editor component"
          ],
          "failureMessages": [],
          "fullName": "Editor component denies updates",
          "location": null,
          "status": "passed",
          "title": "denies updates"
        },
        {
          "ancestorTitles": [
            "Editor component",
            "initMonaco()"
          ],
          "failureMessages": [],
          "fullName": "Editor component initMonaco() attempts to create an editor",
          "location": null,
          "status": "passed",
          "title": "attempts to create an editor"
        },
        {
          "ancestorTitles": [
            "Editor component",
            "initMonaco()",
            "backups"
          ],
          "failureMessages": [],
          "fullName": "Editor component initMonaco() backups attempts to restore a backup if contains a model",
          "location": null,
          "status": "passed",
          "title": "attempts to restore a backup if contains a model"
        },
        {
          "ancestorTitles": [
            "Editor component",
            "initMonaco()",
            "backups"
          ],
          "failureMessages": [],
          "fullName": "Editor component initMonaco() backups attempts to restore a backup if contains a string value",
          "location": null,
          "status": "passed",
          "title": "attempts to restore a backup if contains a string value"
        },
        {
          "ancestorTitles": [
            "Editor component",
            "initMonaco()"
          ],
          "failureMessages": [],
          "fullName": "Editor component initMonaco() initializes with a fixed tab size",
          "location": null,
          "status": "passed",
          "title": "initializes with a fixed tab size"
        },
        {
          "ancestorTitles": [
            "Editor component",
            "initMonaco()"
          ],
          "failureMessages": [],
          "fullName": "Editor component initMonaco() sets up a listener on focused text editor",
          "location": null,
          "status": "passed",
          "title": "sets up a listener on focused text editor"
        },
        {
          "ancestorTitles": [
            "Editor component"
          ],
          "failureMessages": [],
          "fullName": "Editor component componentWillUnmount() attempts to dispose the editor",
          "location": null,
          "status": "passed",
          "title": "componentWillUnmount() attempts to dispose the editor"
        }
      ],
      "endTime": 1595019700941,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/editor-spec.tsx",
      "startTime": 1595019699930,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component toggles the auth dialog on click if not authed",
          "location": null,
          "status": "passed",
          "title": "toggles the auth dialog on click if not authed"
        },
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component toggles the publish method on click if authed",
          "location": null,
          "status": "passed",
          "title": "toggles the publish method on click if authed"
        },
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component attempts to publish to Gist",
          "location": null,
          "status": "passed",
          "title": "attempts to publish to Gist"
        },
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component handles missing content",
          "location": null,
          "status": "passed",
          "title": "handles missing content"
        },
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component handles an error in Gist publishing",
          "location": null,
          "status": "passed",
          "title": "handles an error in Gist publishing"
        },
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component uses the privacy setting correctly",
          "location": null,
          "status": "passed",
          "title": "uses the privacy setting correctly"
        },
        {
          "ancestorTitles": [
            "Publish button component"
          ],
          "failureMessages": [],
          "fullName": "Publish button component disables during gist publishing",
          "location": null,
          "status": "passed",
          "title": "disables during gist publishing"
        },
        {
          "ancestorTitles": [
            "Publish button component",
            "privacy menu"
          ],
          "failureMessages": [],
          "fullName": "Publish button component privacy menu toggles the privacy setting",
          "location": null,
          "status": "passed",
          "title": "toggles the privacy setting"
        }
      ],
      "endTime": 1595019702037,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/commands-publish-button-spec.tsx",
      "startTime": 1595019700673,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component tries to read the clipboard on focus and enters it if valid",
          "location": null,
          "status": "passed",
          "title": "tries to read the clipboard on focus and enters it if valid"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component tries to read the clipboard on focus and does not enter it if too short",
          "location": null,
          "status": "passed",
          "title": "tries to read the clipboard on focus and does not enter it if too short"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component tries to read the clipboard on focus and does not enter it if invalid",
          "location": null,
          "status": "passed",
          "title": "tries to read the clipboard on focus and does not enter it if invalid"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component tries to read the clipboard on focus and does not enter it if invalid",
          "location": null,
          "status": "passed",
          "title": "tries to read the clipboard on focus and does not enter it if invalid"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component reset() resets the component",
          "location": null,
          "status": "passed",
          "title": "reset() resets the component"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component onClose() resets the component",
          "location": null,
          "status": "passed",
          "title": "onClose() resets the component"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component handleChange() handles the change event",
          "location": null,
          "status": "passed",
          "title": "handleChange() handles the change event"
        },
        {
          "ancestorTitles": [
            "TokenDialog component"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component openGenerateTokenExternal() tries to open the link",
          "location": null,
          "status": "passed",
          "title": "openGenerateTokenExternal() tries to open the link"
        },
        {
          "ancestorTitles": [
            "TokenDialog component",
            "onSubmitToken()"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component onSubmitToken() handles missing input",
          "location": null,
          "status": "passed",
          "title": "handles missing input"
        },
        {
          "ancestorTitles": [
            "TokenDialog component",
            "onSubmitToken()"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component onSubmitToken() tries to sign the user in",
          "location": null,
          "status": "passed",
          "title": "tries to sign the user in"
        },
        {
          "ancestorTitles": [
            "TokenDialog component",
            "onSubmitToken()"
          ],
          "failureMessages": [],
          "fullName": "TokenDialog component onSubmitToken() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        }
      ],
      "endTime": 1595019702635,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/dialog-token-spec.tsx",
      "startTime": 1595019700237,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "BisectDialog component"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "onBeginSelect()"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component onBeginSelect() sets the begin version",
          "location": null,
          "status": "passed",
          "title": "sets the begin version"
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "onEndSelect()"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component onEndSelect() sets the end version",
          "location": null,
          "status": "passed",
          "title": "sets the end version"
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "onSubmit()"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component onSubmit() initiates a bisect instance and sets a version",
          "location": null,
          "status": "passed",
          "title": "initiates a bisect instance and sets a version"
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "onSubmit()"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component onSubmit() does nothing if endIndex or startIndex are falsy",
          "location": null,
          "status": "passed",
          "title": "does nothing if endIndex or startIndex are falsy"
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "items disabled",
            "isEarliestItemDisabled"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component items disabled isEarliestItemDisabled enables a version older than the \"latest version\"",
          "location": null,
          "status": "passed",
          "title": "enables a version older than the \"latest version\""
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "items disabled",
            "isEarliestItemDisabled"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component items disabled isEarliestItemDisabled disables a version newer than the \"latest version\"",
          "location": null,
          "status": "passed",
          "title": "disables a version newer than the \"latest version\""
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "items disabled",
            "isLatestItemDisabled"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component items disabled isLatestItemDisabled enables a version newer than the \"earliest version\"",
          "location": null,
          "status": "passed",
          "title": "enables a version newer than the \"earliest version\""
        },
        {
          "ancestorTitles": [
            "BisectDialog component",
            "items disabled",
            "isLatestItemDisabled"
          ],
          "failureMessages": [],
          "fullName": "BisectDialog component items disabled isLatestItemDisabled disables a version older than the \"earliest version\"",
          "location": null,
          "status": "passed",
          "title": "disables a version older than the \"earliest version\""
        }
      ],
      "endTime": 1595019703405,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/dialog-bisect-spec.tsx",
      "startTime": 1595019702045,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AppearanceSettings component"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component renders the correct selected theme",
          "location": null,
          "status": "passed",
          "title": "renders the correct selected theme"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component handles a theme change",
          "location": null,
          "status": "passed",
          "title": "handles a theme change"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "openThemeFolder()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component openThemeFolder() attempts to open the folder",
          "location": null,
          "status": "passed",
          "title": "attempts to open the folder"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "openThemeFolder()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component openThemeFolder() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "createNewThemeFromCurrent()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component createNewThemeFromCurrent() creates a new file from the current theme",
          "location": null,
          "status": "passed",
          "title": "creates a new file from the current theme"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "createNewThemeFromCurrent()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component createNewThemeFromCurrent() adds the newly created theme to the Themes dropdown",
          "location": null,
          "status": "passed",
          "title": "adds the newly created theme to the Themes dropdown"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "createNewThemeFromCurrent()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component createNewThemeFromCurrent() handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "filterItem()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component filterItem() filters",
          "location": null,
          "status": "passed",
          "title": "filters"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "renderItem()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component renderItem() returns null for non-matching",
          "location": null,
          "status": "passed",
          "title": "returns null for non-matching"
        },
        {
          "ancestorTitles": [
            "AppearanceSettings component",
            "renderItem()"
          ],
          "failureMessages": [],
          "fullName": "AppearanceSettings component renderItem() returns a MenuItem for matching",
          "location": null,
          "status": "passed",
          "title": "returns a MenuItem for matching"
        }
      ],
      "endTime": 1595019703416,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-general-appearance-spec.tsx",
      "startTime": 1595019700950,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ElectronSettings component"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handles removing a version",
          "location": null,
          "status": "passed",
          "title": "handles removing a version"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handles downloading a version",
          "location": null,
          "status": "passed",
          "title": "handles downloading a version"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handles the deleteAll()",
          "location": null,
          "status": "passed",
          "title": "handles the deleteAll()"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handles the downloadAll()",
          "location": null,
          "status": "passed",
          "title": "handles the downloadAll()"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component",
            "handleDownloadClick()"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handleDownloadClick() kicks off an update of Electron versions",
          "location": null,
          "status": "passed",
          "title": "kicks off an update of Electron versions"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component",
            "handleAddVersion()"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handleAddVersion() toggles the add version dialog",
          "location": null,
          "status": "passed",
          "title": "toggles the add version dialog"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component",
            "handleVersionChange()"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handleVersionChange() handles a new selection",
          "location": null,
          "status": "passed",
          "title": "handles a new selection"
        },
        {
          "ancestorTitles": [
            "ElectronSettings component",
            "handleChannelChange()"
          ],
          "failureMessages": [],
          "fullName": "ElectronSettings component handleChannelChange() handles a new selection",
          "location": null,
          "status": "passed",
          "title": "handles a new selection"
        }
      ],
      "endTime": 1595019704321,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-electron-spec.tsx",
      "startTime": 1595019702643,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "themes",
            "activateTheme()"
          ],
          "failureMessages": [],
          "fullName": "themes activateTheme() attempts to activate a theme",
          "location": null,
          "status": "passed",
          "title": "attempts to activate a theme"
        },
        {
          "ancestorTitles": [
            "themes",
            "activateTheme()"
          ],
          "failureMessages": [],
          "fullName": "themes activateTheme() does not do anything if Monaco isn't available yet",
          "location": null,
          "status": "passed",
          "title": "does not do anything if Monaco isn't available yet"
        },
        {
          "ancestorTitles": [
            "themes",
            "getAvailableThemes()"
          ],
          "failureMessages": [],
          "fullName": "themes getAvailableThemes() returns default themes if the folder does not exist",
          "location": null,
          "status": "passed",
          "title": "returns default themes if the folder does not exist"
        },
        {
          "ancestorTitles": [
            "themes",
            "getAvailableThemes()"
          ],
          "failureMessages": [],
          "fullName": "themes getAvailableThemes() reads the themes folder for themes",
          "location": null,
          "status": "passed",
          "title": "reads the themes folder for themes"
        },
        {
          "ancestorTitles": [
            "themes",
            "getAvailableThemes()"
          ],
          "failureMessages": [],
          "fullName": "themes getAvailableThemes() handles a readdir error",
          "location": null,
          "status": "passed",
          "title": "handles a readdir error"
        },
        {
          "ancestorTitles": [
            "themes",
            "getAvailableThemes()"
          ],
          "failureMessages": [],
          "fullName": "themes getAvailableThemes() handles a readJSON error",
          "location": null,
          "status": "passed",
          "title": "handles a readJSON error"
        },
        {
          "ancestorTitles": [
            "themes",
            "getTheme()"
          ],
          "failureMessages": [],
          "fullName": "themes getTheme() returns a default theme",
          "location": null,
          "status": "passed",
          "title": "returns a default theme"
        },
        {
          "ancestorTitles": [
            "themes",
            "getTheme()"
          ],
          "failureMessages": [],
          "fullName": "themes getTheme() returns a default theme for null",
          "location": null,
          "status": "passed",
          "title": "returns a default theme for null"
        },
        {
          "ancestorTitles": [
            "themes",
            "getTheme()"
          ],
          "failureMessages": [],
          "fullName": "themes getTheme() returns a named theme",
          "location": null,
          "status": "passed",
          "title": "returns a named theme"
        },
        {
          "ancestorTitles": [
            "themes",
            "getTheme()"
          ],
          "failureMessages": [],
          "fullName": "themes getTheme() handles a read error",
          "location": null,
          "status": "passed",
          "title": "handles a read error"
        },
        {
          "ancestorTitles": [
            "themes",
            "readThemeFile()"
          ],
          "failureMessages": [],
          "fullName": "themes readThemeFile() returns the default (light) theme",
          "location": null,
          "status": "passed",
          "title": "returns the default (light) theme"
        },
        {
          "ancestorTitles": [
            "themes",
            "readThemeFile()"
          ],
          "failureMessages": [],
          "fullName": "themes readThemeFile() returns the default (Dark) theme",
          "location": null,
          "status": "passed",
          "title": "returns the default (Dark) theme"
        },
        {
          "ancestorTitles": [
            "themes",
            "readThemeFile()"
          ],
          "failureMessages": [],
          "fullName": "themes readThemeFile() returns the default (Dark) theme",
          "location": null,
          "status": "passed",
          "title": "returns the default (Dark) theme"
        },
        {
          "ancestorTitles": [
            "themes",
            "readThemeFile()"
          ],
          "failureMessages": [],
          "fullName": "themes readThemeFile() reads the right file if ends with .json",
          "location": null,
          "status": "passed",
          "title": "reads the right file if ends with .json"
        },
        {
          "ancestorTitles": [
            "themes",
            "readThemeFile()"
          ],
          "failureMessages": [],
          "fullName": "themes readThemeFile() reads the right file if does not end with .json",
          "location": null,
          "status": "passed",
          "title": "reads the right file if does not end with .json"
        }
      ],
      "endTime": 1595019704321,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/themes-spec.tsx",
      "startTime": 1595019703418,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "files",
            "setupFileListeners()"
          ],
          "failureMessages": [],
          "fullName": "files setupFileListeners() sets up the listener",
          "location": null,
          "status": "passed",
          "title": "sets up the listener"
        },
        {
          "ancestorTitles": [
            "files",
            "showOpenDialog"
          ],
          "failureMessages": [],
          "fullName": "files showOpenDialog tries to open an \"open\" dialog",
          "location": null,
          "status": "passed",
          "title": "tries to open an \"open\" dialog"
        },
        {
          "ancestorTitles": [
            "files",
            "showOpenDialog"
          ],
          "failureMessages": [],
          "fullName": "files showOpenDialog notifies the main window of the event",
          "location": null,
          "status": "passed",
          "title": "notifies the main window of the event"
        },
        {
          "ancestorTitles": [
            "files",
            "showSaveDialog"
          ],
          "failureMessages": [],
          "fullName": "files showSaveDialog tries to open an \"open\" dialog to be used as a save dialog",
          "location": null,
          "status": "passed",
          "title": "tries to open an \"open\" dialog to be used as a save dialog"
        },
        {
          "ancestorTitles": [
            "files",
            "showSaveDialog"
          ],
          "failureMessages": [],
          "fullName": "files showSaveDialog tries to open an \"open\" dialog to be used as a save as dialog",
          "location": null,
          "status": "passed",
          "title": "tries to open an \"open\" dialog to be used as a save as dialog"
        },
        {
          "ancestorTitles": [
            "files",
            "showSaveDialog"
          ],
          "failureMessages": [],
          "fullName": "files showSaveDialog handles not getting a path returned",
          "location": null,
          "status": "passed",
          "title": "handles not getting a path returned"
        },
        {
          "ancestorTitles": [
            "files",
            "showSaveDialog"
          ],
          "failureMessages": [],
          "fullName": "files showSaveDialog ensures that the target is empty on save",
          "location": null,
          "status": "passed",
          "title": "ensures that the target is empty on save"
        },
        {
          "ancestorTitles": [
            "files",
            "showSaveDialog"
          ],
          "failureMessages": [],
          "fullName": "files showSaveDialog does not overwrite files without consent",
          "location": null,
          "status": "passed",
          "title": "does not overwrite files without consent"
        },
        {
          "ancestorTitles": [
            "files",
            "showSaveDialog"
          ],
          "failureMessages": [],
          "fullName": "files showSaveDialog does not overwrite files if an error happens",
          "location": null,
          "status": "passed",
          "title": "does not overwrite files if an error happens"
        }
      ],
      "endTime": 1595019704418,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/files-spec.ts",
      "startTime": 1595019703425,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Bisect commands component"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component renders helper buttons if bisect instance is active",
          "location": null,
          "status": "passed",
          "title": "renders helper buttons if bisect instance is active"
        },
        {
          "ancestorTitles": [
            "Bisect commands component"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component disables helper buttons if Electron binary is downloading",
          "location": null,
          "status": "passed",
          "title": "disables helper buttons if Electron binary is downloading"
        },
        {
          "ancestorTitles": [
            "Bisect commands component"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component renders bisect dialog button if no bisect instance",
          "location": null,
          "status": "passed",
          "title": "renders bisect dialog button if no bisect instance"
        },
        {
          "ancestorTitles": [
            "Bisect commands component",
            "buttons"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component buttons passes in Version=Good when thumbs up button is pressed",
          "location": null,
          "status": "passed",
          "title": "passes in Version=Good when thumbs up button is pressed"
        },
        {
          "ancestorTitles": [
            "Bisect commands component",
            "buttons"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component buttons passes in Version=Bad when thumbs down button is pressed",
          "location": null,
          "status": "passed",
          "title": "passes in Version=Bad when thumbs down button is pressed"
        },
        {
          "ancestorTitles": [
            "Bisect commands component",
            "continueBisect()"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component continueBisect() closes the currently running app",
          "location": null,
          "status": "passed",
          "title": "closes the currently running app"
        },
        {
          "ancestorTitles": [
            "Bisect commands component",
            "continueBisect()"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component continueBisect() sets version assigned by bisect algorithm",
          "location": null,
          "status": "passed",
          "title": "sets version assigned by bisect algorithm"
        },
        {
          "ancestorTitles": [
            "Bisect commands component",
            "continueBisect()"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component continueBisect() terminates bisect if algorithm returns array",
          "location": null,
          "status": "passed",
          "title": "terminates bisect if algorithm returns array"
        },
        {
          "ancestorTitles": [
            "Bisect commands component",
            "terminateBisect()"
          ],
          "failureMessages": [],
          "fullName": "Bisect commands component terminateBisect() removes the bisect instance from the app state",
          "location": null,
          "status": "passed",
          "title": "removes the bisect instance from the app state"
        }
      ],
      "endTime": 1595019705328,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/commands-bisect-spec.tsx",
      "startTime": 1595019704334,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "protocol",
            "setupProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol setupProtocolHandler() attempts to setup the protocol handler",
          "location": null,
          "status": "passed",
          "title": "attempts to setup the protocol handler"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles a Fiddle url (open-url)",
          "location": null,
          "status": "passed",
          "title": "handles a Fiddle url (open-url)"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles a Fiddle url with a username (open-url)",
          "location": null,
          "status": "passed",
          "title": "handles a Fiddle url with a username (open-url)"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles a non-fiddle url (open-url)",
          "location": null,
          "status": "passed",
          "title": "handles a non-fiddle url (open-url)"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles a Fiddle url (argv)",
          "location": null,
          "status": "passed",
          "title": "handles a Fiddle url (argv)"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() waits for the app to be ready",
          "location": null,
          "status": "passed",
          "title": "waits for the app to be ready"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles an electron path url",
          "location": null,
          "status": "passed",
          "title": "handles an electron path url"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles a flawed electron path url",
          "location": null,
          "status": "passed",
          "title": "handles a flawed electron path url"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles a flawed url (unclear instruction)",
          "location": null,
          "status": "passed",
          "title": "handles a flawed url (unclear instruction)"
        },
        {
          "ancestorTitles": [
            "protocol",
            "listenForProtocolHandler()"
          ],
          "failureMessages": [],
          "fullName": "protocol listenForProtocolHandler() handles a flawed url (no instruction)",
          "location": null,
          "status": "passed",
          "title": "handles a flawed url (no instruction)"
        }
      ],
      "endTime": 1595019705345,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/protocol-spec.ts",
      "startTime": 1595019704328,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AddVersionDialog component"
          ],
          "failureMessages": [],
          "fullName": "AddVersionDialog component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "AddVersionDialog component"
          ],
          "failureMessages": [],
          "fullName": "AddVersionDialog component overrides default input with Electron dialog",
          "location": null,
          "status": "passed",
          "title": "overrides default input with Electron dialog"
        },
        {
          "ancestorTitles": [
            "AddVersionDialog component",
            "setFolderPath()"
          ],
          "failureMessages": [],
          "fullName": "AddVersionDialog component setFolderPath() does something",
          "location": null,
          "status": "passed",
          "title": "does something"
        },
        {
          "ancestorTitles": [
            "AddVersionDialog component",
            "onChangeVersion()"
          ],
          "failureMessages": [],
          "fullName": "AddVersionDialog component onChangeVersion() handles valid input",
          "location": null,
          "status": "passed",
          "title": "handles valid input"
        },
        {
          "ancestorTitles": [
            "AddVersionDialog component",
            "onChangeVersion()"
          ],
          "failureMessages": [],
          "fullName": "AddVersionDialog component onChangeVersion() handles invalid input",
          "location": null,
          "status": "passed",
          "title": "handles invalid input"
        },
        {
          "ancestorTitles": [
            "AddVersionDialog component",
            "onSubmit"
          ],
          "failureMessages": [],
          "fullName": "AddVersionDialog component onSubmit does not do anything without a file",
          "location": null,
          "status": "passed",
          "title": "does not do anything without a file"
        },
        {
          "ancestorTitles": [
            "AddVersionDialog component",
            "onSubmit"
          ],
          "failureMessages": [],
          "fullName": "AddVersionDialog component onSubmit adds a local version using the given data",
          "location": null,
          "status": "passed",
          "title": "adds a local version using the given data"
        }
      ],
      "endTime": 1595019706114,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/dialog-add-version-spec.tsx",
      "startTime": 1595019704426,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Chrome-Mac component"
          ],
          "failureMessages": [],
          "fullName": "Chrome-Mac component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "Chrome-Mac component"
          ],
          "failureMessages": [],
          "fullName": "Chrome-Mac component renders nothing on win32",
          "location": null,
          "status": "passed",
          "title": "renders nothing on win32"
        },
        {
          "ancestorTitles": [
            "Chrome-Mac component",
            "handleDoubleClick"
          ],
          "failureMessages": [],
          "fullName": "Chrome-Mac component handleDoubleClick should minimize the window if AppleActionOnDoubleClick is minimize",
          "location": null,
          "status": "passed",
          "title": "should minimize the window if AppleActionOnDoubleClick is minimize"
        },
        {
          "ancestorTitles": [
            "Chrome-Mac component",
            "handleDoubleClick"
          ],
          "failureMessages": [],
          "fullName": "Chrome-Mac component handleDoubleClick should maximize the window if AppleActionOnDoubleClick is maximize and the window is not maximized",
          "location": null,
          "status": "passed",
          "title": "should maximize the window if AppleActionOnDoubleClick is maximize and the window is not maximized"
        },
        {
          "ancestorTitles": [
            "Chrome-Mac component",
            "handleDoubleClick"
          ],
          "failureMessages": [],
          "fullName": "Chrome-Mac component handleDoubleClick should unmaximize the window if AppleActionOnDoubleClick is maximize and the window is maximized",
          "location": null,
          "status": "passed",
          "title": "should unmaximize the window if AppleActionOnDoubleClick is maximize and the window is maximized"
        },
        {
          "ancestorTitles": [
            "Chrome-Mac component",
            "handleDoubleClick"
          ],
          "failureMessages": [],
          "fullName": "Chrome-Mac component handleDoubleClick should do nothingif AppleActionOnDoubleClick is an unknown value",
          "location": null,
          "status": "passed",
          "title": "should do nothingif AppleActionOnDoubleClick is an unknown value"
        }
      ],
      "endTime": 1595019706560,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/chrome-mac-spec.tsx",
      "startTime": 1595019705345,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "VersionSelect component"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "renderItem()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component renderItem() renders an item",
          "location": null,
          "status": "passed",
          "title": "renders an item"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "renderItem()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component renderItem() returns null if it does not match predicate",
          "location": null,
          "status": "passed",
          "title": "returns null if it does not match predicate"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "getItemLabel()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component getItemLabel() returns the correct label for a local version",
          "location": null,
          "status": "passed",
          "title": "returns the correct label for a local version"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "getItemLabel()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component getItemLabel() returns the correct label for a version not downloaded",
          "location": null,
          "status": "passed",
          "title": "returns the correct label for a version not downloaded"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "getItemLabel()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component getItemLabel() returns the correct label for a version downloaded",
          "location": null,
          "status": "passed",
          "title": "returns the correct label for a version downloaded"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "getItemLabel()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component getItemLabel() returns the correct label for a version downloading",
          "location": null,
          "status": "passed",
          "title": "returns the correct label for a version downloading"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "getItemIcon()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component getItemIcon() returns the correct icon",
          "location": null,
          "status": "passed",
          "title": "returns the correct icon"
        },
        {
          "ancestorTitles": [
            "VersionSelect component",
            "filterItem()"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component filterItem() correctly matches a query",
          "location": null,
          "status": "passed",
          "title": "correctly matches a query"
        }
      ],
      "endTime": 1595019706715,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/version-select-spec.tsx",
      "startTime": 1595019705362,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "position-for-rect",
            "invertPosition()"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect invertPosition() inverts \"right\"",
          "location": null,
          "status": "passed",
          "title": "inverts \"right\""
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "invertPosition()"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect invertPosition() inverts \"left\"",
          "location": null,
          "status": "passed",
          "title": "inverts \"left\""
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "invertPosition()"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect invertPosition() inverts \"top\"",
          "location": null,
          "status": "passed",
          "title": "inverts \"top\""
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "invertPosition()"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect invertPosition() inverts \"bottom\"",
          "location": null,
          "status": "passed",
          "title": "inverts \"bottom\""
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "invertPosition()"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect invertPosition() always returns a position",
          "location": null,
          "status": "passed",
          "title": "always returns a position"
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "positionForRect()",
            "positionForRect() (Windows, Linux)"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect positionForRect() positionForRect() (Windows, Linux) returns a position on the top right if doable",
          "location": null,
          "status": "passed",
          "title": "returns a position on the top right if doable"
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "positionForRect()",
            "positionForRect() (Windows, Linux)"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect positionForRect() positionForRect() (Windows, Linux) returns a position on the top left if doable",
          "location": null,
          "status": "passed",
          "title": "returns a position on the top left if doable"
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "positionForRect()",
            "positionForRect() (macOS)"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect positionForRect() positionForRect() (macOS) returns a position on the top right if doable",
          "location": null,
          "status": "passed",
          "title": "returns a position on the top right if doable"
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "positionForRect()",
            "positionForRect() (macOS)"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect positionForRect() positionForRect() (macOS) returns a position on the top left if doable",
          "location": null,
          "status": "passed",
          "title": "returns a position on the top left if doable"
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "positionForRect()"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect positionForRect() returns a position on the bottom middle if doable",
          "location": null,
          "status": "passed",
          "title": "returns a position on the bottom middle if doable"
        },
        {
          "ancestorTitles": [
            "position-for-rect",
            "positionForRect()"
          ],
          "failureMessages": [],
          "fullName": "position-for-rect positionForRect() returns a position in the middle as a last resort",
          "location": null,
          "status": "passed",
          "title": "returns a position in the middle as a last resort"
        }
      ],
      "endTime": 1595019707227,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/position-for-rect-spec.ts",
      "startTime": 1595019706569,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component renders supplied buttons",
          "location": null,
          "status": "passed",
          "title": "renders supplied buttons"
        },
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component renders \"Finish Tour\" at the end",
          "location": null,
          "status": "passed",
          "title": "renders \"Finish Tour\" at the end"
        },
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component handles a missing target",
          "location": null,
          "status": "passed",
          "title": "handles a missing target"
        },
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component stops on stop()",
          "location": null,
          "status": "passed",
          "title": "stops on stop()"
        },
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component advances on advance()",
          "location": null,
          "status": "passed",
          "title": "advances on advance()"
        },
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component handles a resize",
          "location": null,
          "status": "passed",
          "title": "handles a resize"
        },
        {
          "ancestorTitles": [
            "VersionChooser component"
          ],
          "failureMessages": [],
          "fullName": "VersionChooser component removes the resize listener",
          "location": null,
          "status": "passed",
          "title": "removes the resize listener"
        }
      ],
      "endTime": 1595019707305,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/tour-spec.tsx",
      "startTime": 1595019706122,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager creates a touch bar with versions",
          "location": null,
          "status": "passed",
          "title": "creates a touch bar with versions"
        },
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager updates the versions when the versions change",
          "location": null,
          "status": "passed",
          "title": "updates the versions when the versions change"
        },
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager start/stop btn updates the label",
          "location": null,
          "status": "passed",
          "title": "start/stop btn updates the label"
        },
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager start/stop btn handles a click",
          "location": null,
          "status": "passed",
          "title": "start/stop btn handles a click"
        },
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager version btn handles a click and opens version scrubber",
          "location": null,
          "status": "passed",
          "title": "version btn handles a click and opens version scrubber"
        },
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager version scrubber \"back\" button does not select version",
          "location": null,
          "status": "passed",
          "title": "version scrubber \"back\" button does not select version"
        },
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager version scrubber \"select\" method goes from index to version",
          "location": null,
          "status": "passed",
          "title": "version scrubber \"select\" method goes from index to version"
        },
        {
          "ancestorTitles": [
            "TouchBarManager"
          ],
          "failureMessages": [],
          "fullName": "TouchBarManager version scrubber \"select\" button does select version",
          "location": null,
          "status": "passed",
          "title": "version scrubber \"select\" button does select version"
        }
      ],
      "endTime": 1595019707581,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/touch-bar-manager-spec.ts",
      "startTime": 1595019706732,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "npm",
            "getIsNpmInstalled()"
          ],
          "failureMessages": [],
          "fullName": "npm getIsNpmInstalled() returns true if npm installed",
          "location": null,
          "status": "passed",
          "title": "returns true if npm installed"
        },
        {
          "ancestorTitles": [
            "npm",
            "getIsNpmInstalled()"
          ],
          "failureMessages": [],
          "fullName": "npm getIsNpmInstalled() returns true if npm installed",
          "location": null,
          "status": "passed",
          "title": "returns true if npm installed"
        },
        {
          "ancestorTitles": [
            "npm",
            "getIsNpmInstalled()"
          ],
          "failureMessages": [],
          "fullName": "npm getIsNpmInstalled() returns false if npm not installed",
          "location": null,
          "status": "passed",
          "title": "returns false if npm not installed"
        },
        {
          "ancestorTitles": [
            "npm",
            "getIsNpmInstalled()"
          ],
          "failureMessages": [],
          "fullName": "npm getIsNpmInstalled() uses the cache",
          "location": null,
          "status": "passed",
          "title": "uses the cache"
        },
        {
          "ancestorTitles": [
            "npm",
            "findModulesInEditors()"
          ],
          "failureMessages": [],
          "fullName": "npm findModulesInEditors() finds modules, ignoring node and electron builtins",
          "location": null,
          "status": "passed",
          "title": "finds modules, ignoring node and electron builtins"
        },
        {
          "ancestorTitles": [
            "npm",
            "installModules()"
          ],
          "failureMessages": [],
          "fullName": "npm installModules() attempts to install a single module",
          "location": null,
          "status": "passed",
          "title": "attempts to install a single module"
        },
        {
          "ancestorTitles": [
            "npm",
            "installModules()"
          ],
          "failureMessages": [],
          "fullName": "npm installModules() attempts to installs all modules",
          "location": null,
          "status": "passed",
          "title": "attempts to installs all modules"
        },
        {
          "ancestorTitles": [
            "npm",
            "npmRun()"
          ],
          "failureMessages": [],
          "fullName": "npm npmRun() attempts to run a command",
          "location": null,
          "status": "passed",
          "title": "attempts to run a command"
        }
      ],
      "endTime": 1595019707926,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/npm-spec.ts",
      "startTime": 1595019707236,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "main",
            "main()"
          ],
          "failureMessages": [],
          "fullName": "main main() quits during Squirrel events",
          "location": null,
          "status": "passed",
          "title": "quits during Squirrel events"
        },
        {
          "ancestorTitles": [
            "main",
            "main()"
          ],
          "failureMessages": [],
          "fullName": "main main() listens to core events",
          "location": null,
          "status": "passed",
          "title": "listens to core events"
        },
        {
          "ancestorTitles": [
            "main",
            "onBeforeQuit()"
          ],
          "failureMessages": [],
          "fullName": "main onBeforeQuit() sets up IPC so app can quit if dialog confirmed",
          "location": null,
          "status": "passed",
          "title": "sets up IPC so app can quit if dialog confirmed"
        },
        {
          "ancestorTitles": [
            "main",
            "quitAppIfConfirmed()"
          ],
          "failureMessages": [],
          "fullName": "main quitAppIfConfirmed() quits app if passed a truthy value",
          "location": null,
          "status": "passed",
          "title": "quits app if passed a truthy value"
        },
        {
          "ancestorTitles": [
            "main",
            "quitAppIfConfirmed()"
          ],
          "failureMessages": [],
          "fullName": "main quitAppIfConfirmed() does nothing if passed a value",
          "location": null,
          "status": "passed",
          "title": "does nothing if passed a value"
        },
        {
          "ancestorTitles": [
            "main",
            "onReady()"
          ],
          "failureMessages": [],
          "fullName": "main onReady() opens a BrowserWindow, sets up updates",
          "location": null,
          "status": "passed",
          "title": "opens a BrowserWindow, sets up updates"
        },
        {
          "ancestorTitles": [
            "main",
            "onWindowsAllClosed()"
          ],
          "failureMessages": [],
          "fullName": "main onWindowsAllClosed() quits the app on Windows",
          "location": null,
          "status": "passed",
          "title": "quits the app on Windows"
        },
        {
          "ancestorTitles": [
            "main",
            "onWindowsAllClosed()"
          ],
          "failureMessages": [],
          "fullName": "main onWindowsAllClosed() does not quit the app on macOS",
          "location": null,
          "status": "passed",
          "title": "does not quit the app on macOS"
        }
      ],
      "endTime": 1595019708647,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/main-spec.ts",
      "startTime": 1595019707312,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "CreditsSettings component"
          ],
          "failureMessages": [],
          "fullName": "CreditsSettings component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "CreditsSettings component"
          ],
          "failureMessages": [],
          "fullName": "CreditsSettings component renders for contributors with less data",
          "location": null,
          "status": "passed",
          "title": "renders for contributors with less data"
        },
        {
          "ancestorTitles": [
            "CreditsSettings component"
          ],
          "failureMessages": [],
          "fullName": "CreditsSettings component renders nothing if we do not have contributors",
          "location": null,
          "status": "passed",
          "title": "renders nothing if we do not have contributors"
        },
        {
          "ancestorTitles": [
            "CreditsSettings component"
          ],
          "failureMessages": [],
          "fullName": "CreditsSettings component handles a read error",
          "location": null,
          "status": "passed",
          "title": "handles a read error"
        },
        {
          "ancestorTitles": [
            "CreditsSettings component"
          ],
          "failureMessages": [],
          "fullName": "CreditsSettings component handles a click",
          "location": null,
          "status": "passed",
          "title": "handles a click"
        }
      ],
      "endTime": 1595019708955,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-credits-spec.tsx",
      "startTime": 1595019707595,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "windows",
            "getMainWindowOptions()"
          ],
          "failureMessages": [],
          "fullName": "windows getMainWindowOptions() returns the expected output on Windows",
          "location": null,
          "status": "passed",
          "title": "returns the expected output on Windows"
        },
        {
          "ancestorTitles": [
            "windows",
            "getMainWindowOptions()"
          ],
          "failureMessages": [],
          "fullName": "windows getMainWindowOptions() returns the expected output on Linux",
          "location": null,
          "status": "passed",
          "title": "returns the expected output on Linux"
        },
        {
          "ancestorTitles": [
            "windows",
            "getMainWindowOptions()"
          ],
          "failureMessages": [],
          "fullName": "windows getMainWindowOptions() returns the expected output on macOS",
          "location": null,
          "status": "passed",
          "title": "returns the expected output on macOS"
        },
        {
          "ancestorTitles": [
            "windows",
            "getOrCreateMainWindow()"
          ],
          "failureMessages": [],
          "fullName": "windows getOrCreateMainWindow() creates a window on first call",
          "location": null,
          "status": "passed",
          "title": "creates a window on first call"
        },
        {
          "ancestorTitles": [
            "windows",
            "getOrCreateMainWindow()"
          ],
          "failureMessages": [],
          "fullName": "windows getOrCreateMainWindow() updates \"browserWindows\" on \"close\"",
          "location": null,
          "status": "passed",
          "title": "updates \"browserWindows\" on \"close\""
        },
        {
          "ancestorTitles": [
            "windows",
            "getOrCreateMainWindow()"
          ],
          "failureMessages": [],
          "fullName": "windows getOrCreateMainWindow() creates the context menu on \"dom-ready\"",
          "location": null,
          "status": "passed",
          "title": "creates the context menu on \"dom-ready\""
        },
        {
          "ancestorTitles": [
            "windows",
            "getOrCreateMainWindow()"
          ],
          "failureMessages": [],
          "fullName": "windows getOrCreateMainWindow() prevents new-window\"",
          "location": null,
          "status": "passed",
          "title": "prevents new-window\""
        },
        {
          "ancestorTitles": [
            "windows",
            "getOrCreateMainWindow()"
          ],
          "failureMessages": [],
          "fullName": "windows getOrCreateMainWindow() prevents will-navigate\"",
          "location": null,
          "status": "passed",
          "title": "prevents will-navigate\""
        },
        {
          "ancestorTitles": [
            "windows",
            "getOrCreateMainWindow()"
          ],
          "failureMessages": [],
          "fullName": "windows getOrCreateMainWindow() shows the window on IPC event",
          "location": null,
          "status": "passed",
          "title": "shows the window on IPC event"
        }
      ],
      "endTime": 1595019708975,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/windows-spec.ts",
      "startTime": 1595019707972,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() does not render the show/hide on non-darwin",
          "location": null,
          "status": "passed",
          "title": "does not render the show/hide on non-darwin"
        },
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() handles the show/hide example",
          "location": null,
          "status": "passed",
          "title": "handles the show/hide example"
        },
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() handles the focus example",
          "location": null,
          "status": "passed",
          "title": "handles the focus example"
        },
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() handles the paths example",
          "location": null,
          "status": "passed",
          "title": "handles the paths example"
        },
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() handles the metrics example",
          "location": null,
          "status": "passed",
          "title": "handles the metrics example"
        }
      ],
      "endTime": 1595019709567,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/show-me/app-spec.tsx",
      "startTime": 1595019708655,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Output component"
          ],
          "failureMessages": [],
          "fullName": "Output component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "Output component"
          ],
          "failureMessages": [],
          "fullName": "Output component renders with output",
          "location": null,
          "status": "passed",
          "title": "renders with output"
        },
        {
          "ancestorTitles": [
            "Output component"
          ],
          "failureMessages": [],
          "fullName": "Output component calculates a timestamp",
          "location": null,
          "status": "passed",
          "title": "calculates a timestamp"
        },
        {
          "ancestorTitles": [
            "Output component"
          ],
          "failureMessages": [],
          "fullName": "Output component hides the console with react-mosaic-component",
          "location": null,
          "status": "passed",
          "title": "hides the console with react-mosaic-component"
        },
        {
          "ancestorTitles": [
            "Output component"
          ],
          "failureMessages": [],
          "fullName": "Output component handles componentDidUpdate",
          "location": null,
          "status": "passed",
          "title": "handles componentDidUpdate"
        }
      ],
      "endTime": 1595019709837,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/output-spec.tsx",
      "startTime": 1595019708982,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component renders null if settings not showing",
          "location": null,
          "status": "passed",
          "title": "renders null if settings not showing"
        },
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component renders only the menu if page unknown",
          "location": null,
          "status": "passed",
          "title": "renders only the menu if page unknown"
        },
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component renders the Electron page by default",
          "location": null,
          "status": "passed",
          "title": "renders the Electron page by default"
        },
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component renders the General page after a click",
          "location": null,
          "status": "passed",
          "title": "renders the General page after a click"
        },
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component renders the Electron page after a click",
          "location": null,
          "status": "passed",
          "title": "renders the Electron page after a click"
        },
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component renders the Execution page after a click",
          "location": null,
          "status": "passed",
          "title": "renders the Execution page after a click"
        },
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component renders the Credits page after a click",
          "location": null,
          "status": "passed",
          "title": "renders the Credits page after a click"
        },
        {
          "ancestorTitles": [
            "Settings component"
          ],
          "failureMessages": [],
          "fullName": "Settings component closes upon pressing Escape key",
          "location": null,
          "status": "passed",
          "title": "closes upon pressing Escape key"
        }
      ],
      "endTime": 1595019710364,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-spec.tsx",
      "startTime": 1595019708963,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "dialogs"
          ],
          "failureMessages": [],
          "fullName": "dialogs sets up dialogs",
          "location": null,
          "status": "passed",
          "title": "sets up dialogs"
        },
        {
          "ancestorTitles": [
            "dialogs",
            "warning dialog"
          ],
          "failureMessages": [],
          "fullName": "dialogs warning dialog shows dialog when triggering IPC event",
          "location": null,
          "status": "passed",
          "title": "shows dialog when triggering IPC event"
        },
        {
          "ancestorTitles": [
            "dialogs",
            "confirmation dialog"
          ],
          "failureMessages": [],
          "fullName": "dialogs confirmation dialog shows dialog when triggering IPC event",
          "location": null,
          "status": "passed",
          "title": "shows dialog when triggering IPC event"
        },
        {
          "ancestorTitles": [
            "dialogs",
            "local version folder dialog"
          ],
          "failureMessages": [],
          "fullName": "dialogs local version folder dialog shows dialog when triggering IPC event",
          "location": null,
          "status": "passed",
          "title": "shows dialog when triggering IPC event"
        },
        {
          "ancestorTitles": [
            "dialogs",
            "local version folder dialog"
          ],
          "failureMessages": [],
          "fullName": "dialogs local version folder dialog triggers IPC load local version event",
          "location": null,
          "status": "passed",
          "title": "triggers IPC load local version event"
        },
        {
          "ancestorTitles": [
            "dialogs",
            "local version folder dialog"
          ],
          "failureMessages": [],
          "fullName": "dialogs local version folder dialog does nothing if not given a path",
          "location": null,
          "status": "passed",
          "title": "does nothing if not given a path"
        }
      ],
      "endTime": 1595019710480,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/dialogs-spec.ts",
      "startTime": 1595019709589,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "content",
            "getContent()"
          ],
          "failureMessages": [],
          "fullName": "content getContent() returns content for HTML editor",
          "location": null,
          "status": "passed",
          "title": "returns content for HTML editor"
        },
        {
          "ancestorTitles": [
            "content",
            "getContent()"
          ],
          "failureMessages": [],
          "fullName": "content getContent() returns content for the renderer editor",
          "location": null,
          "status": "passed",
          "title": "returns content for the renderer editor"
        },
        {
          "ancestorTitles": [
            "content",
            "getContent()"
          ],
          "failureMessages": [],
          "fullName": "content getContent() returns content for the main editor",
          "location": null,
          "status": "passed",
          "title": "returns content for the main editor"
        },
        {
          "ancestorTitles": [
            "content",
            "getContent()"
          ],
          "failureMessages": [],
          "fullName": "content getContent() returns an empty string for an unknown request",
          "location": null,
          "status": "passed",
          "title": "returns an empty string for an unknown request"
        },
        {
          "ancestorTitles": [
            "content",
            "isContentUnchanged()"
          ],
          "failureMessages": [],
          "fullName": "content isContentUnchanged() returns false if app is not available",
          "location": null,
          "status": "passed",
          "title": "returns false if app is not available"
        },
        {
          "ancestorTitles": [
            "content",
            "isContentUnchanged()",
            "main"
          ],
          "failureMessages": [],
          "fullName": "content isContentUnchanged() main returns false if it changed",
          "location": null,
          "status": "passed",
          "title": "returns false if it changed"
        },
        {
          "ancestorTitles": [
            "content",
            "isContentUnchanged()",
            "main"
          ],
          "failureMessages": [],
          "fullName": "content isContentUnchanged() main returns true if it did not change",
          "location": null,
          "status": "passed",
          "title": "returns true if it did not change"
        },
        {
          "ancestorTitles": [
            "content",
            "isContentUnchanged()",
            "main"
          ],
          "failureMessages": [],
          "fullName": "content isContentUnchanged() main returns true if it did not change (1.0 version)",
          "location": null,
          "status": "passed",
          "title": "returns true if it did not change (1.0 version)"
        },
        {
          "ancestorTitles": [
            "content",
            "isContentUnchanged()",
            "renderer"
          ],
          "failureMessages": [],
          "fullName": "content isContentUnchanged() renderer returns false if it changed",
          "location": null,
          "status": "passed",
          "title": "returns false if it changed"
        },
        {
          "ancestorTitles": [
            "content",
            "isContentUnchanged()",
            "renderer"
          ],
          "failureMessages": [],
          "fullName": "content isContentUnchanged() renderer returns true if it did not change",
          "location": null,
          "status": "passed",
          "title": "returns true if it did not change"
        }
      ],
      "endTime": 1595019710711,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/content-spec.ts",
      "startTime": 1595019709849,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "AddressBar component"
          ],
          "failureMessages": [],
          "fullName": "AddressBar component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "AddressBar component"
          ],
          "failureMessages": [],
          "fullName": "AddressBar component uses an existing gistId as state",
          "location": null,
          "status": "passed",
          "title": "uses an existing gistId as state"
        },
        {
          "ancestorTitles": [
            "AddressBar component"
          ],
          "failureMessages": [],
          "fullName": "AddressBar component handles change",
          "location": null,
          "status": "passed",
          "title": "handles change"
        },
        {
          "ancestorTitles": [
            "AddressBar component"
          ],
          "failureMessages": [],
          "fullName": "AddressBar component handles an external state change",
          "location": null,
          "status": "passed",
          "title": "handles an external state change"
        },
        {
          "ancestorTitles": [
            "AddressBar component"
          ],
          "failureMessages": [],
          "fullName": "AddressBar component handles submit",
          "location": null,
          "status": "passed",
          "title": "handles submit"
        },
        {
          "ancestorTitles": [
            "AddressBar component"
          ],
          "failureMessages": [],
          "fullName": "AddressBar component disables during gist publishing",
          "location": null,
          "status": "passed",
          "title": "disables during gist publishing"
        }
      ],
      "endTime": 1595019711244,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/commands-address-bar-spec.tsx",
      "startTime": 1595019710373,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "first-run",
            "onFirstRunMaybe()"
          ],
          "failureMessages": [],
          "fullName": "first-run onFirstRunMaybe() doesn't run unless required (not first run)",
          "location": null,
          "status": "passed",
          "title": "doesn't run unless required (not first run)"
        },
        {
          "ancestorTitles": [
            "first-run",
            "onFirstRunMaybe()"
          ],
          "failureMessages": [],
          "fullName": "first-run onFirstRunMaybe() doesn't run unless required (is already in app folder)",
          "location": null,
          "status": "passed",
          "title": "doesn't run unless required (is already in app folder)"
        },
        {
          "ancestorTitles": [
            "first-run",
            "onFirstRunMaybe()"
          ],
          "failureMessages": [],
          "fullName": "first-run onFirstRunMaybe() doesn't run unless required (dev mode)",
          "location": null,
          "status": "passed",
          "title": "doesn't run unless required (dev mode)"
        },
        {
          "ancestorTitles": [
            "first-run",
            "onFirstRunMaybe()"
          ],
          "failureMessages": [],
          "fullName": "first-run onFirstRunMaybe() doesn't run unless required (Windows, Linux)",
          "location": null,
          "status": "passed",
          "title": "doesn't run unless required (Windows, Linux)"
        },
        {
          "ancestorTitles": [
            "first-run",
            "onFirstRunMaybe()"
          ],
          "failureMessages": [],
          "fullName": "first-run onFirstRunMaybe() moves the app when requested to do so",
          "location": null,
          "status": "passed",
          "title": "moves the app when requested to do so"
        }
      ],
      "endTime": 1595019711349,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/first-run-spec.ts",
      "startTime": 1595019710486,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "bisect"
          ],
          "failureMessages": [],
          "fullName": "bisect selects a pivot in the middle of the array",
          "location": null,
          "status": "passed",
          "title": "selects a pivot in the middle of the array"
        },
        {
          "ancestorTitles": [
            "bisect",
            "continue()"
          ],
          "failureMessages": [],
          "fullName": "bisect continue() returns the current version",
          "location": null,
          "status": "passed",
          "title": "returns the current version"
        },
        {
          "ancestorTitles": [
            "bisect",
            "continue()"
          ],
          "failureMessages": [],
          "fullName": "bisect continue() discards lower half of the range if pivot is good version",
          "location": null,
          "status": "passed",
          "title": "discards lower half of the range if pivot is good version"
        },
        {
          "ancestorTitles": [
            "bisect",
            "continue()"
          ],
          "failureMessages": [],
          "fullName": "bisect continue() discards upper half of the range if pivot is bad version",
          "location": null,
          "status": "passed",
          "title": "discards upper half of the range if pivot is bad version"
        },
        {
          "ancestorTitles": [
            "bisect",
            "continue()"
          ],
          "failureMessages": [],
          "fullName": "bisect continue() terminates if fewer than 2 items are left",
          "location": null,
          "status": "passed",
          "title": "terminates if fewer than 2 items are left"
        },
        {
          "ancestorTitles": [
            "bisect",
            "getCurrentVersion()"
          ],
          "failureMessages": [],
          "fullName": "bisect getCurrentVersion() returns a version within the range",
          "location": null,
          "status": "passed",
          "title": "returns a version within the range"
        }
      ],
      "endTime": 1595019711358,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/bisect-spec.ts",
      "startTime": 1595019710720,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "exec",
            "exec()"
          ],
          "failureMessages": [],
          "fullName": "exec exec() executes a given string",
          "location": null,
          "status": "passed",
          "title": "executes a given string"
        },
        {
          "ancestorTitles": [
            "exec",
            "exec()"
          ],
          "failureMessages": [],
          "fullName": "exec exec() handles a returned string",
          "location": null,
          "status": "passed",
          "title": "handles a returned string"
        },
        {
          "ancestorTitles": [
            "exec",
            "exec()"
          ],
          "failureMessages": [],
          "fullName": "exec exec() handles errors",
          "location": null,
          "status": "passed",
          "title": "handles errors"
        },
        {
          "ancestorTitles": [
            "exec",
            "maybeFixPath()"
          ],
          "failureMessages": [],
          "fullName": "exec maybeFixPath() does not do anything on Windows",
          "location": null,
          "status": "passed",
          "title": "does not do anything on Windows"
        },
        {
          "ancestorTitles": [
            "exec",
            "maybeFixPath()"
          ],
          "failureMessages": [],
          "fullName": "exec maybeFixPath() does call fix-path on macOS",
          "location": null,
          "status": "passed",
          "title": "does call fix-path on macOS"
        }
      ],
      "endTime": 1595019712022,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/exec-spec.ts",
      "startTime": 1595019711366,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ExecutionSettings component"
          ],
          "failureMessages": [],
          "fullName": "ExecutionSettings component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "ExecutionSettings component",
            "handleDeleteDataChange()"
          ],
          "failureMessages": [],
          "fullName": "ExecutionSettings component handleDeleteDataChange() handles a new selection",
          "location": null,
          "status": "passed",
          "title": "handles a new selection"
        },
        {
          "ancestorTitles": [
            "ExecutionSettings component",
            "handleElectronLoggingChange()"
          ],
          "failureMessages": [],
          "fullName": "ExecutionSettings component handleElectronLoggingChange() handles a new selection",
          "location": null,
          "status": "passed",
          "title": "handles a new selection"
        },
        {
          "ancestorTitles": [
            "ExecutionSettings component",
            "handleExecutionFlagChange()"
          ],
          "failureMessages": [],
          "fullName": "ExecutionSettings component handleExecutionFlagChange() handles new flags",
          "location": null,
          "status": "passed",
          "title": "handles new flags"
        }
      ],
      "endTime": 1595019712065,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-execution-spec.tsx",
      "startTime": 1595019711358,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Editor toolbar button component",
            "MaximizeButton"
          ],
          "failureMessages": [],
          "fullName": "Editor toolbar button component MaximizeButton renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "Editor toolbar button component",
            "MaximizeButton"
          ],
          "failureMessages": [],
          "fullName": "Editor toolbar button component MaximizeButton handles a click",
          "location": null,
          "status": "passed",
          "title": "handles a click"
        },
        {
          "ancestorTitles": [
            "Editor toolbar button component",
            "RemoveButton"
          ],
          "failureMessages": [],
          "fullName": "Editor toolbar button component RemoveButton renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "Editor toolbar button component",
            "RemoveButton"
          ],
          "failureMessages": [],
          "fullName": "Editor toolbar button component RemoveButton handles a click",
          "location": null,
          "status": "passed",
          "title": "handles a click"
        }
      ],
      "endTime": 1595019712283,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/editors-toolbar-button-spec.tsx",
      "startTime": 1595019711252,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GenericDialog component"
          ],
          "failureMessages": [],
          "fullName": "GenericDialog component renders a warning",
          "location": null,
          "status": "passed",
          "title": "renders a warning"
        },
        {
          "ancestorTitles": [
            "GenericDialog component"
          ],
          "failureMessages": [],
          "fullName": "GenericDialog component renders a confirmation",
          "location": null,
          "status": "passed",
          "title": "renders a confirmation"
        },
        {
          "ancestorTitles": [
            "GenericDialog component"
          ],
          "failureMessages": [],
          "fullName": "GenericDialog component renders a success message",
          "location": null,
          "status": "passed",
          "title": "renders a success message"
        },
        {
          "ancestorTitles": [
            "GenericDialog component"
          ],
          "failureMessages": [],
          "fullName": "GenericDialog component onClose() closes itself",
          "location": null,
          "status": "passed",
          "title": "onClose() closes itself"
        }
      ],
      "endTime": 1595019713058,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/dialog-generic-spec.tsx",
      "startTime": 1595019712029,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "EditorDropdown component"
          ],
          "failureMessages": [],
          "fullName": "EditorDropdown component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "EditorDropdown component"
          ],
          "failureMessages": [],
          "fullName": "EditorDropdown component renders the extra button if the FIDDLE_DOCS_DEMOS is set",
          "location": null,
          "status": "passed",
          "title": "renders the extra button if the FIDDLE_DOCS_DEMOS is set"
        },
        {
          "ancestorTitles": [
            "EditorDropdown component"
          ],
          "failureMessages": [],
          "fullName": "EditorDropdown component handles a click for an item",
          "location": null,
          "status": "passed",
          "title": "handles a click for an item"
        },
        {
          "ancestorTitles": [
            "EditorDropdown component"
          ],
          "failureMessages": [],
          "fullName": "EditorDropdown component disables hide button if only one editor open",
          "location": null,
          "status": "passed",
          "title": "disables hide button if only one editor open"
        }
      ],
      "endTime": 1595019713531,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/commands-editors-spec.tsx",
      "startTime": 1595019712073,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Header component"
          ],
          "failureMessages": [],
          "fullName": "Header component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "Header component"
          ],
          "failureMessages": [],
          "fullName": "Header component renders null if the tour is not showing",
          "location": null,
          "status": "passed",
          "title": "renders null if the tour is not showing"
        },
        {
          "ancestorTitles": [
            "Header component"
          ],
          "failureMessages": [],
          "fullName": "Header component renders the tour once started",
          "location": null,
          "status": "passed",
          "title": "renders the tour once started"
        },
        {
          "ancestorTitles": [
            "Header component"
          ],
          "failureMessages": [],
          "fullName": "Header component stops the tour on stopTour()",
          "location": null,
          "status": "passed",
          "title": "stops the tour on stopTour()"
        },
        {
          "ancestorTitles": [
            "Header component",
            "getWelcomeTour()"
          ],
          "failureMessages": [],
          "fullName": "Header component getWelcomeTour() offers custom buttons for the Electron step",
          "location": null,
          "status": "passed",
          "title": "offers custom buttons for the Electron step"
        }
      ],
      "endTime": 1595019713620,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/tour-welcome-spec.tsx",
      "startTime": 1595019712335,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "IpcMainManager",
            "emit()"
          ],
          "failureMessages": [],
          "fullName": "IpcMainManager emit() emits an Electron IPC event",
          "location": null,
          "status": "passed",
          "title": "emits an Electron IPC event"
        },
        {
          "ancestorTitles": [
            "IpcMainManager",
            "send()"
          ],
          "failureMessages": [],
          "fullName": "IpcMainManager send() sends an event and finds the main window",
          "location": null,
          "status": "passed",
          "title": "sends an event and finds the main window"
        },
        {
          "ancestorTitles": [
            "IpcMainManager",
            "send()"
          ],
          "failureMessages": [],
          "fullName": "IpcMainManager send() sends an event to a target window",
          "location": null,
          "status": "passed",
          "title": "sends an event to a target window"
        },
        {
          "ancestorTitles": [
            "IpcMainManager",
            "send()"
          ],
          "failureMessages": [],
          "fullName": "IpcMainManager send() does not send an event to a target window if it is not ready",
          "location": null,
          "status": "passed",
          "title": "does not send an event to a target window if it is not ready"
        }
      ],
      "endTime": 1595019713838,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/ipc-spec.ts",
      "startTime": 1595019713064,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Mosaic Arrangement Utilities",
            "createMosaicArrangement()"
          ],
          "failureMessages": [],
          "fullName": "Mosaic Arrangement Utilities createMosaicArrangement() creates the correct arrangement for one visible panel",
          "location": null,
          "status": "passed",
          "title": "creates the correct arrangement for one visible panel"
        },
        {
          "ancestorTitles": [
            "Mosaic Arrangement Utilities",
            "createMosaicArrangement()"
          ],
          "failureMessages": [],
          "fullName": "Mosaic Arrangement Utilities createMosaicArrangement() creates the correct arrangement for two visible panels",
          "location": null,
          "status": "passed",
          "title": "creates the correct arrangement for two visible panels"
        },
        {
          "ancestorTitles": [
            "Mosaic Arrangement Utilities",
            "createMosaicArrangement()"
          ],
          "failureMessages": [],
          "fullName": "Mosaic Arrangement Utilities createMosaicArrangement() creates the correct arrangement for three visible panels",
          "location": null,
          "status": "passed",
          "title": "creates the correct arrangement for three visible panels"
        },
        {
          "ancestorTitles": [
            "Mosaic Arrangement Utilities",
            "getVisibleMosaics()"
          ],
          "failureMessages": [],
          "fullName": "Mosaic Arrangement Utilities getVisibleMosaics() returns the correct array for no panels",
          "location": null,
          "status": "passed",
          "title": "returns the correct array for no panels"
        },
        {
          "ancestorTitles": [
            "Mosaic Arrangement Utilities",
            "getVisibleMosaics()"
          ],
          "failureMessages": [],
          "fullName": "Mosaic Arrangement Utilities getVisibleMosaics() returns the correct array for one visible panel",
          "location": null,
          "status": "passed",
          "title": "returns the correct array for one visible panel"
        },
        {
          "ancestorTitles": [
            "Mosaic Arrangement Utilities",
            "getVisibleMosaics()"
          ],
          "failureMessages": [],
          "fullName": "Mosaic Arrangement Utilities getVisibleMosaics() returns the correct array for two visible panels",
          "location": null,
          "status": "passed",
          "title": "returns the correct array for two visible panels"
        },
        {
          "ancestorTitles": [
            "Mosaic Arrangement Utilities",
            "getVisibleMosaics()"
          ],
          "failureMessages": [],
          "fullName": "Mosaic Arrangement Utilities getVisibleMosaics() returns the correct array for three visible panels",
          "location": null,
          "status": "passed",
          "title": "returns the correct array for three visible panels"
        }
      ],
      "endTime": 1595019714139,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/editors-mosaic-arrangement-spec.ts",
      "startTime": 1595019713539,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "get-package"
          ],
          "failureMessages": [],
          "fullName": "get-package getPackageJson() returns a default package.json",
          "location": null,
          "status": "passed",
          "title": "getPackageJson() returns a default package.json"
        },
        {
          "ancestorTitles": [
            "get-package"
          ],
          "failureMessages": [],
          "fullName": "get-package getPackageJson() includes electron if needed",
          "location": null,
          "status": "passed",
          "title": "getPackageJson() includes electron if needed"
        }
      ],
      "endTime": 1595019714314,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/get-package-spec.ts",
      "startTime": 1595019713628,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "forgeTransform()"
          ],
          "failureMessages": [],
          "fullName": "forgeTransform() adds forge dependencies",
          "location": null,
          "status": "passed",
          "title": "adds forge dependencies"
        },
        {
          "ancestorTitles": [
            "forgeTransform()"
          ],
          "failureMessages": [],
          "fullName": "forgeTransform() deals with errors",
          "location": null,
          "status": "passed",
          "title": "deals with errors"
        }
      ],
      "endTime": 1595019714603,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/transforms/forge-spec.ts",
      "startTime": 1595019713846,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getEditorValue()"
          ],
          "failureMessages": [],
          "fullName": "getEditorValue() returns the value for an editor if it exists",
          "location": null,
          "status": "passed",
          "title": "returns the value for an editor if it exists"
        },
        {
          "ancestorTitles": [
            "getEditorValue()"
          ],
          "failureMessages": [],
          "fullName": "getEditorValue() returns the value for the editor backup if it exists",
          "location": null,
          "status": "passed",
          "title": "returns the value for the editor backup if it exists"
        },
        {
          "ancestorTitles": [
            "getEditorValue()"
          ],
          "failureMessages": [],
          "fullName": "getEditorValue() returns an empty string if window.Fiddle is not ready",
          "location": null,
          "status": "passed",
          "title": "returns an empty string if window.Fiddle is not ready"
        },
        {
          "ancestorTitles": [
            "getEditorValue()"
          ],
          "failureMessages": [],
          "fullName": "getEditorValue() returns an empty string if the editor does not exist",
          "location": null,
          "status": "passed",
          "title": "returns an empty string if the editor does not exist"
        }
      ],
      "endTime": 1595019715186,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/editor-value-spec.ts",
      "startTime": 1595019714610,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "VersionSelect component"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "VersionSelect component"
          ],
          "failureMessages": [],
          "fullName": "VersionSelect component selects a new version",
          "location": null,
          "status": "passed",
          "title": "selects a new version"
        }
      ],
      "endTime": 1595019715199,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/commands-version-chooser-spec.tsx",
      "startTime": 1595019714159,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Dialogs component"
          ],
          "failureMessages": [],
          "fullName": "Dialogs component renders the token dialog",
          "location": null,
          "status": "passed",
          "title": "renders the token dialog"
        },
        {
          "ancestorTitles": [
            "Dialogs component"
          ],
          "failureMessages": [],
          "fullName": "Dialogs component renders the settings dialog",
          "location": null,
          "status": "passed",
          "title": "renders the settings dialog"
        },
        {
          "ancestorTitles": [
            "Dialogs component"
          ],
          "failureMessages": [],
          "fullName": "Dialogs component renders the settings dialog",
          "location": null,
          "status": "passed",
          "title": "renders the settings dialog"
        }
      ],
      "endTime": 1595019715669,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/dialogs-spec.tsx",
      "startTime": 1595019714322,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "templates",
            "getTemplateValues()"
          ],
          "failureMessages": [],
          "fullName": "templates getTemplateValues() attempts to load template values",
          "location": null,
          "status": "passed",
          "title": "attempts to load template values"
        },
        {
          "ancestorTitles": [
            "templates",
            "getTemplateValues()"
          ],
          "failureMessages": [],
          "fullName": "templates getTemplateValues() handles errors",
          "location": null,
          "status": "passed",
          "title": "handles errors"
        },
        {
          "ancestorTitles": [
            "templates",
            "getTemplateValues()"
          ],
          "failureMessages": [],
          "fullName": "templates getTemplateValues() handles errors and reports the templates content",
          "location": null,
          "status": "passed",
          "title": "handles errors and reports the templates content"
        }
      ],
      "endTime": 1595019715829,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/templates-spec.ts",
      "startTime": 1595019715212,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component renders default",
          "location": null,
          "status": "passed",
          "title": "renders default"
        },
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component renders running",
          "location": null,
          "status": "passed",
          "title": "renders running"
        },
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component renders downloading",
          "location": null,
          "status": "passed",
          "title": "renders downloading"
        },
        {
          "ancestorTitles": [
            "Runner component"
          ],
          "failureMessages": [],
          "fullName": "Runner component renders \"checking status\"",
          "location": null,
          "status": "passed",
          "title": "renders \"checking status\""
        }
      ],
      "endTime": 1595019715892,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/commands-runner-spec.tsx",
      "startTime": 1595019715193,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "devtools"
          ],
          "failureMessages": [],
          "fullName": "devtools does not set up developer tools if not in dev mode",
          "location": null,
          "status": "passed",
          "title": "does not set up developer tools if not in dev mode"
        },
        {
          "ancestorTitles": [
            "devtools"
          ],
          "failureMessages": [],
          "fullName": "devtools sets up developer tools if in dev mode",
          "location": null,
          "status": "passed",
          "title": "sets up developer tools if in dev mode"
        },
        {
          "ancestorTitles": [
            "devtools"
          ],
          "failureMessages": [],
          "fullName": "devtools catch error in setting up developer tools",
          "location": null,
          "status": "passed",
          "title": "catch error in setting up developer tools"
        }
      ],
      "endTime": 1595019716394,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/devtools-spec.ts",
      "startTime": 1595019715676,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "get-title",
            "getTitle()"
          ],
          "failureMessages": [],
          "fullName": "get-title getTitle() returns a solid default title",
          "location": null,
          "status": "passed",
          "title": "returns a solid default title"
        },
        {
          "ancestorTitles": [
            "get-title",
            "getTitle()"
          ],
          "failureMessages": [],
          "fullName": "get-title getTitle() returns a title for a Gist",
          "location": null,
          "status": "passed",
          "title": "returns a title for a Gist"
        },
        {
          "ancestorTitles": [
            "get-title",
            "getTitle()"
          ],
          "failureMessages": [],
          "fullName": "get-title getTitle() returns a title for a local fiddle",
          "location": null,
          "status": "passed",
          "title": "returns a title for a local fiddle"
        },
        {
          "ancestorTitles": [
            "get-title",
            "getTitle()"
          ],
          "failureMessages": [],
          "fullName": "get-title getTitle() returns a title for a local & gist fiddle",
          "location": null,
          "status": "passed",
          "title": "returns a title for a local & gist fiddle"
        },
        {
          "ancestorTitles": [
            "get-title",
            "getName()"
          ],
          "failureMessages": [],
          "fullName": "get-title getName() returns a random name",
          "location": null,
          "status": "passed",
          "title": "returns a random name"
        },
        {
          "ancestorTitles": [
            "get-title",
            "getName()"
          ],
          "failureMessages": [],
          "fullName": "get-title getName() returns a name from the local path if saved",
          "location": null,
          "status": "passed",
          "title": "returns a name from the local path if saved"
        }
      ],
      "endTime": 1595019716417,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/get-title-spec.ts",
      "startTime": 1595019715841,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "sorted-eletron-map"
          ],
          "failureMessages": [],
          "fullName": "sorted-eletron-map sorts a record of electron versions",
          "location": null,
          "status": "passed",
          "title": "sorts a record of electron versions"
        },
        {
          "ancestorTitles": [
            "sorted-eletron-map"
          ],
          "failureMessages": [],
          "fullName": "sorted-eletron-map handles invalid versions",
          "location": null,
          "status": "passed",
          "title": "handles invalid versions"
        }
      ],
      "endTime": 1595019716493,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/sorted-electron-map-spec.ts",
      "startTime": 1595019715909,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "gist",
            "idFromUrl()"
          ],
          "failureMessages": [],
          "fullName": "gist idFromUrl() gets an id from a URL (direct format)",
          "location": null,
          "status": "passed",
          "title": "gets an id from a URL (direct format)"
        },
        {
          "ancestorTitles": [
            "gist",
            "idFromUrl()"
          ],
          "failureMessages": [],
          "fullName": "gist idFromUrl() gets an id from a URL (\"with user\" format)",
          "location": null,
          "status": "passed",
          "title": "gets an id from a URL (\"with user\" format)"
        },
        {
          "ancestorTitles": [
            "gist",
            "idFromUrl()"
          ],
          "failureMessages": [],
          "fullName": "gist idFromUrl() handles garbage",
          "location": null,
          "status": "passed",
          "title": "handles garbage"
        },
        {
          "ancestorTitles": [
            "gist",
            "urlFromId"
          ],
          "failureMessages": [],
          "fullName": "gist urlFromId returns a url for an id",
          "location": null,
          "status": "passed",
          "title": "returns a url for an id"
        },
        {
          "ancestorTitles": [
            "gist",
            "urlFromId"
          ],
          "failureMessages": [],
          "fullName": "gist urlFromId returns an empty string if id is undefined",
          "location": null,
          "status": "passed",
          "title": "returns an empty string if id is undefined"
        }
      ],
      "endTime": 1595019716993,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/gist-spec.ts",
      "startTime": 1595019716401,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "octokit",
            "getOctokit()"
          ],
          "failureMessages": [],
          "fullName": "octokit getOctokit() requires the Octokit only once",
          "location": null,
          "status": "passed",
          "title": "requires the Octokit only once"
        },
        {
          "ancestorTitles": [
            "octokit",
            "getOctokit()"
          ],
          "failureMessages": [],
          "fullName": "octokit getOctokit() uses GitHub authentication when available",
          "location": null,
          "status": "passed",
          "title": "uses GitHub authentication when available"
        }
      ],
      "endTime": 1595019717043,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/octokit-spec.ts",
      "startTime": 1595019716425,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ConsoleSettings component"
          ],
          "failureMessages": [],
          "fullName": "ConsoleSettings component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "ConsoleSettings component",
            "handleClearOnRunChange()"
          ],
          "failureMessages": [],
          "fullName": "ConsoleSettings component handleClearOnRunChange() handles a new selection",
          "location": null,
          "status": "passed",
          "title": "handles a new selection"
        }
      ],
      "endTime": 1595019717184,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-general-console-spec.tsx",
      "startTime": 1595019716500,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getEditorViewState()"
          ],
          "failureMessages": [],
          "fullName": "getEditorViewState() returns the value for an editor",
          "location": null,
          "status": "passed",
          "title": "returns the value for an editor"
        },
        {
          "ancestorTitles": [
            "getEditorViewState()"
          ],
          "failureMessages": [],
          "fullName": "getEditorViewState() returns null if the editor does not exist",
          "location": null,
          "status": "passed",
          "title": "returns null if the editor does not exist"
        },
        {
          "ancestorTitles": [
            "getEditorViewState()"
          ],
          "failureMessages": [],
          "fullName": "getEditorViewState() throws if window.Fiddle is not ready",
          "location": null,
          "status": "passed",
          "title": "throws if window.Fiddle is not ready"
        }
      ],
      "endTime": 1595019717690,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/editor-viewstate-spec.ts",
      "startTime": 1595019717054,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GitHubSettings component"
          ],
          "failureMessages": [],
          "fullName": "GitHubSettings component renders when not signed in",
          "location": null,
          "status": "passed",
          "title": "renders when not signed in"
        },
        {
          "ancestorTitles": [
            "GitHubSettings component"
          ],
          "failureMessages": [],
          "fullName": "GitHubSettings component renders when signed in",
          "location": null,
          "status": "passed",
          "title": "renders when signed in"
        },
        {
          "ancestorTitles": [
            "GitHubSettings component"
          ],
          "failureMessages": [],
          "fullName": "GitHubSettings component opens the token dialog on click",
          "location": null,
          "status": "passed",
          "title": "opens the token dialog on click"
        }
      ],
      "endTime": 1595019717723,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-general-github-spec.tsx",
      "startTime": 1595019717002,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getEditorModel()"
          ],
          "failureMessages": [],
          "fullName": "getEditorModel() returns the value for an editor",
          "location": null,
          "status": "passed",
          "title": "returns the value for an editor"
        },
        {
          "ancestorTitles": [
            "getEditorModel()"
          ],
          "failureMessages": [],
          "fullName": "getEditorModel() returns null if the editor does not exist",
          "location": null,
          "status": "passed",
          "title": "returns null if the editor does not exist"
        },
        {
          "ancestorTitles": [
            "getEditorModel()"
          ],
          "failureMessages": [],
          "fullName": "getEditorModel() returns null if window.Fiddle is not ready",
          "location": null,
          "status": "passed",
          "title": "returns null if window.Fiddle is not ready"
        }
      ],
      "endTime": 1595019717787,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/editor-model-spec.ts",
      "startTime": 1595019717191,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "focused-editor"
          ],
          "failureMessages": [],
          "fullName": "focused-editor getFocusedEditor() returns the focused editor",
          "location": null,
          "status": "passed",
          "title": "getFocusedEditor() returns the focused editor"
        },
        {
          "ancestorTitles": [
            "focused-editor"
          ],
          "failureMessages": [],
          "fullName": "focused-editor getFocusedEditor() returns the focused editor",
          "location": null,
          "status": "passed",
          "title": "getFocusedEditor() returns the focused editor"
        },
        {
          "ancestorTitles": [
            "focused-editor"
          ],
          "failureMessages": [],
          "fullName": "focused-editor getFocusedEditor() returns null if the editor does not exist",
          "location": null,
          "status": "passed",
          "title": "getFocusedEditor() returns null if the editor does not exist"
        }
      ],
      "endTime": 1595019718329,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/focused-editor-spec.ts",
      "startTime": 1595019717698,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "sort-buttons"
          ],
          "failureMessages": [],
          "fullName": "sort-buttons sorts an array on Windows",
          "location": null,
          "status": "passed",
          "title": "sorts an array on Windows"
        },
        {
          "ancestorTitles": [
            "sort-buttons"
          ],
          "failureMessages": [],
          "fullName": "sort-buttons sorts an array on Linux",
          "location": null,
          "status": "passed",
          "title": "sorts an array on Linux"
        },
        {
          "ancestorTitles": [
            "sort-buttons"
          ],
          "failureMessages": [],
          "fullName": "sort-buttons sorts an array on macOS",
          "location": null,
          "status": "passed",
          "title": "sorts an array on macOS"
        }
      ],
      "endTime": 1595019718409,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/sort-buttons-spec.ts",
      "startTime": 1595019717795,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ipcRendererManager",
            "emit()"
          ],
          "failureMessages": [],
          "fullName": "ipcRendererManager emit() emits an Electron IPC event",
          "location": null,
          "status": "passed",
          "title": "emits an Electron IPC event"
        },
        {
          "ancestorTitles": [
            "ipcRendererManager",
            "send()"
          ],
          "failureMessages": [],
          "fullName": "ipcRendererManager send() sends an event",
          "location": null,
          "status": "passed",
          "title": "sends an event"
        }
      ],
      "endTime": 1595019718990,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/ipc-spec.ts",
      "startTime": 1595019718416,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Commands component"
          ],
          "failureMessages": [],
          "fullName": "Commands component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        }
      ],
      "endTime": 1595019719181,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/commands-spec.tsx",
      "startTime": 1595019718336,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "isFirstRun"
          ],
          "failureMessages": [],
          "fullName": "isFirstRun reports a first run",
          "location": null,
          "status": "passed",
          "title": "reports a first run"
        },
        {
          "ancestorTitles": [
            "isFirstRun"
          ],
          "failureMessages": [],
          "fullName": "isFirstRun reports a first run",
          "location": null,
          "status": "passed",
          "title": "reports a first run"
        },
        {
          "ancestorTitles": [
            "isFirstRun"
          ],
          "failureMessages": [],
          "fullName": "isFirstRun handles an error",
          "location": null,
          "status": "passed",
          "title": "handles an error"
        }
      ],
      "endTime": 1595019719650,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/check-first-run-spec.ts",
      "startTime": 1595019719188,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "editor-layout"
          ],
          "failureMessages": [],
          "fullName": "editor-layout updateEditorLayout calls layout() just once",
          "location": null,
          "status": "passed",
          "title": "updateEditorLayout calls layout() just once"
        }
      ],
      "endTime": 1595019719693,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/editor-layout-spec.ts",
      "startTime": 1595019718997,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Type checks",
            "isEditorId()"
          ],
          "failureMessages": [],
          "fullName": "Type checks isEditorId() works",
          "location": null,
          "status": "passed",
          "title": "works"
        },
        {
          "ancestorTitles": [
            "Type checks",
            "isPanelId()"
          ],
          "failureMessages": [],
          "fullName": "Type checks isPanelId() works",
          "location": null,
          "status": "passed",
          "title": "works"
        },
        {
          "ancestorTitles": [
            "Type checks",
            "isEditorBackup()"
          ],
          "failureMessages": [],
          "fullName": "Type checks isEditorBackup() works",
          "location": null,
          "status": "passed",
          "title": "works"
        }
      ],
      "endTime": 1595019720146,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/type-checks-spec.ts",
      "startTime": 1595019719700,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "GeneralSettings component"
          ],
          "failureMessages": [],
          "fullName": "GeneralSettings component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        }
      ],
      "endTime": 1595019720163,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/settings-general-spec.tsx",
      "startTime": 1595019719657,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "themes defaults"
          ],
          "failureMessages": [],
          "fullName": "themes defaults exports defaultDark",
          "location": null,
          "status": "passed",
          "title": "exports defaultDark"
        },
        {
          "ancestorTitles": [
            "themes defaults"
          ],
          "failureMessages": [],
          "fullName": "themes defaults exports defaultLight",
          "location": null,
          "status": "passed",
          "title": "exports defaultLight"
        }
      ],
      "endTime": 1595019720624,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/themes-defaults-spec.ts",
      "startTime": 1595019720152,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Header component"
          ],
          "failureMessages": [],
          "fullName": "Header component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        }
      ],
      "endTime": 1595019720744,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/header-spec.tsx",
      "startTime": 1595019720169,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "js-path",
            "getAtPath()"
          ],
          "failureMessages": [],
          "fullName": "js-path getAtPath() works with an object",
          "location": null,
          "status": "passed",
          "title": "works with an object"
        },
        {
          "ancestorTitles": [
            "js-path",
            "getAtPath()"
          ],
          "failureMessages": [],
          "fullName": "js-path getAtPath() works with a simple object",
          "location": null,
          "status": "passed",
          "title": "works with a simple object"
        },
        {
          "ancestorTitles": [
            "js-path",
            "setAtPath()"
          ],
          "failureMessages": [],
          "fullName": "js-path setAtPath() works with an object",
          "location": null,
          "status": "passed",
          "title": "works with an object"
        }
      ],
      "endTime": 1595019721075,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/js-path-spec.ts",
      "startTime": 1595019720630,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "array-to-stringmap"
          ],
          "failureMessages": [],
          "fullName": "array-to-stringmap correctly turns an array of versions into a stringmap",
          "location": null,
          "status": "passed",
          "title": "correctly turns an array of versions into a stringmap"
        }
      ],
      "endTime": 1595019721222,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/array-to-stringmap-spec.ts",
      "startTime": 1595019720751,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "devMode"
          ],
          "failureMessages": [],
          "fullName": "devMode correctly returns true if defaultApp",
          "location": null,
          "status": "passed",
          "title": "correctly returns true if defaultApp"
        },
        {
          "ancestorTitles": [
            "devMode"
          ],
          "failureMessages": [],
          "fullName": "devMode correctly returns false if not defaultApp",
          "location": null,
          "status": "passed",
          "title": "correctly returns false if not defaultApp"
        }
      ],
      "endTime": 1595019721601,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/devmode-spec.ts",
      "startTime": 1595019721082,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "electron-name"
          ],
          "failureMessages": [],
          "fullName": "electron-name returns the right name for each platform",
          "location": null,
          "status": "passed",
          "title": "returns the right name for each platform"
        }
      ],
      "endTime": 1595019721733,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/electron-name-spec.ts",
      "startTime": 1595019721228,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "waitforEditorsToMount"
          ],
          "failureMessages": [],
          "fullName": "waitforEditorsToMount resolves when editors match list",
          "location": null,
          "status": "passed",
          "title": "resolves when editors match list"
        },
        {
          "ancestorTitles": [
            "waitforEditorsToMount"
          ],
          "failureMessages": [],
          "fullName": "waitforEditorsToMount rejects if editors fail to match list",
          "location": null,
          "status": "passed",
          "title": "rejects if editors fail to match list"
        }
      ],
      "endTime": 1595019722057,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/editor-mounted-spec.ts",
      "startTime": 1595019717729,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "random"
          ],
          "failureMessages": [],
          "fullName": "random returns a random number",
          "location": null,
          "status": "passed",
          "title": "returns a random number"
        },
        {
          "ancestorTitles": [
            "random"
          ],
          "failureMessages": [],
          "fullName": "random handles no input",
          "location": null,
          "status": "passed",
          "title": "handles no input"
        }
      ],
      "endTime": 1595019722064,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/random-spec.ts",
      "startTime": 1595019721608,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "renderMoreDocumentation()"
          ],
          "failureMessages": [],
          "fullName": "renderMoreDocumentation() renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        }
      ],
      "endTime": 1595019722240,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/show-me/more-information-spec.tsx",
      "startTime": 1595019721740,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "ShowMe component"
          ],
          "failureMessages": [],
          "fullName": "ShowMe component renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        },
        {
          "ancestorTitles": [
            "ShowMe component"
          ],
          "failureMessages": [],
          "fullName": "ShowMe component renders a template spec",
          "location": null,
          "status": "passed",
          "title": "renders a template spec"
        }
      ],
      "endTime": 1595019722608,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/show-me-spec.tsx",
      "startTime": 1595019722066,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "renderNonIdealState()"
          ],
          "failureMessages": [],
          "fullName": "renderNonIdealState() renders a non-ideal state",
          "location": null,
          "status": "passed",
          "title": "renders a non-ideal state"
        },
        {
          "ancestorTitles": [
            "renderNonIdealState()"
          ],
          "failureMessages": [],
          "fullName": "renderNonIdealState() handles a click",
          "location": null,
          "status": "passed",
          "title": "handles a click"
        }
      ],
      "endTime": 1595019722621,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/editors-non-ideal-state-spec.tsx",
      "startTime": 1595019722070,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        }
      ],
      "endTime": 1595019722812,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/show-me/default-spec.tsx",
      "startTime": 1595019722250,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "highlightText"
          ],
          "failureMessages": [],
          "fullName": "highlightText highlights text",
          "location": null,
          "status": "passed",
          "title": "highlights text"
        },
        {
          "ancestorTitles": [
            "highlightText"
          ],
          "failureMessages": [],
          "fullName": "highlightText highlights text (multiple matches)",
          "location": null,
          "status": "passed",
          "title": "highlights text (multiple matches)"
        },
        {
          "ancestorTitles": [
            "highlightText"
          ],
          "failureMessages": [],
          "fullName": "highlightText does not highlight text",
          "location": null,
          "status": "passed",
          "title": "does not highlight text"
        }
      ],
      "endTime": 1595019723134,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/highlight-text-spec.ts",
      "startTime": 1595019722627,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "update"
          ],
          "failureMessages": [],
          "fullName": "update schedules an update check",
          "location": null,
          "status": "passed",
          "title": "schedules an update check"
        }
      ],
      "endTime": 1595019723306,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/update-spec.ts",
      "startTime": 1595019722614,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getSubsetOnly()"
          ],
          "failureMessages": [],
          "fullName": "getSubsetOnly() renders",
          "location": null,
          "status": "passed",
          "title": "renders"
        }
      ],
      "endTime": 1595019723338,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/renderer/components/show-me/subset-only-spec.tsx",
      "startTime": 1595019722820,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getDocsUrlForModule()"
          ],
          "failureMessages": [],
          "fullName": "getDocsUrlForModule() works",
          "location": null,
          "status": "passed",
          "title": "works"
        }
      ],
      "endTime": 1595019723680,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/docs-urls-spec.ts",
      "startTime": 1595019723141,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "maybePlural",
            "maybePlural()"
          ],
          "failureMessages": [],
          "fullName": "maybePlural maybePlural() pluralizes when it should",
          "location": null,
          "status": "passed",
          "title": "pluralizes when it should"
        },
        {
          "ancestorTitles": [
            "maybePlural",
            "maybePlural()"
          ],
          "failureMessages": [],
          "fullName": "maybePlural maybePlural() does not pluralizes when it should not",
          "location": null,
          "status": "passed",
          "title": "does not pluralizes when it should not"
        }
      ],
      "endTime": 1595019723846,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/plural-maybe-spec.ts",
      "startTime": 1595019723312,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getEditorBackup()"
          ],
          "failureMessages": [],
          "fullName": "getEditorBackup() returns the value for an editor",
          "location": null,
          "status": "passed",
          "title": "returns the value for an editor"
        }
      ],
      "endTime": 1595019723886,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/editor-backup-spec.ts",
      "startTime": 1595019723345,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "toggleMonaco()"
          ],
          "failureMessages": [],
          "fullName": "toggleMonaco() toggles a boolean",
          "location": null,
          "status": "passed",
          "title": "toggles a boolean"
        },
        {
          "ancestorTitles": [
            "toggleMonaco()"
          ],
          "failureMessages": [],
          "fullName": "toggleMonaco() toggles an \"off\" and \"on\"",
          "location": null,
          "status": "passed",
          "title": "toggles an \"off\" and \"on\""
        }
      ],
      "endTime": 1595019724225,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/toggle-monaco-spec.ts",
      "startTime": 1595019723691,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "normalize-version"
          ],
          "failureMessages": [],
          "fullName": "normalize-version normalizes a version with a leading v",
          "location": null,
          "status": "passed",
          "title": "normalizes a version with a leading v"
        },
        {
          "ancestorTitles": [
            "normalize-version"
          ],
          "failureMessages": [],
          "fullName": "normalize-version normalizes a version without a leading v",
          "location": null,
          "status": "passed",
          "title": "normalizes a version without a leading v"
        }
      ],
      "endTime": 1595019724387,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/normalize-version-spec.ts",
      "startTime": 1595019723853,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "shouldQuit"
          ],
          "failureMessages": [],
          "fullName": "shouldQuit returns simply electron-squirrel-startup",
          "location": null,
          "status": "passed",
          "title": "returns simply electron-squirrel-startup"
        }
      ],
      "endTime": 1595019724586,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/main/squirrel-spec.ts",
      "startTime": 1595019723892,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "dotfilesTransform()"
          ],
          "failureMessages": [],
          "fullName": "dotfilesTransform() adds a .gitignore file",
          "location": null,
          "status": "passed",
          "title": "adds a .gitignore file"
        }
      ],
      "endTime": 1595019724684,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/transforms/dotfiles-spec.ts",
      "startTime": 1595019724233,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "get-username"
          ],
          "failureMessages": [],
          "fullName": "get-username returns the OS username",
          "location": null,
          "status": "passed",
          "title": "returns the OS username"
        }
      ],
      "endTime": 1595019724881,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/get-username-spec.ts",
      "startTime": 1595019724394,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "fancyImport()"
          ],
          "failureMessages": [],
          "fullName": "fancyImport() imports modules",
          "location": null,
          "status": "passed",
          "title": "imports modules"
        }
      ],
      "endTime": 1595019725091,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/utils/fancy-import-spec.ts",
      "startTime": 1595019724593,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "content/renderer"
          ],
          "failureMessages": [],
          "fullName": "content/renderer has content",
          "location": null,
          "status": "passed",
          "title": "has content"
        }
      ],
      "endTime": 1595019725180,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/content/renderer-spec.ts",
      "startTime": 1595019724694,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "content/html"
          ],
          "failureMessages": [],
          "fullName": "content/html has content",
          "location": null,
          "status": "passed",
          "title": "has content"
        }
      ],
      "endTime": 1595019725346,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/content/html-spec.ts",
      "startTime": 1595019724888,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "content/main"
          ],
          "failureMessages": [],
          "fullName": "content/main has content",
          "location": null,
          "status": "passed",
          "title": "has content"
        }
      ],
      "endTime": 1595019725543,
      "message": "",
      "name": "/Users/runner/work/sentinel-oss/sentinel-oss/tests/content/main-spec.ts",
      "startTime": 1595019725097,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}